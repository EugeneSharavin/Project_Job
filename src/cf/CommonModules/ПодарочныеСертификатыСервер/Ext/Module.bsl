
Процедура ПроверитьВключениеИспользованияПодарочныхСертификатов(Отказ = Ложь, ВызыватьИсключение = Ложь) Экспорт
    ИспользоватьПодарочныеСертификаты = ПолучитьФункциональнуюОпцию("ИспользоватьПодарочныеСертификаты");
	
	Если НЕ ИспользоватьПодарочныеСертификаты Тогда
		ТекстСообщения = НСтр("ru = 'Использование подарочных сертификатов отключено.
                               |Для включения перейдите в раздел ""Администрирование"" - ""Общие настройки"",
                               |далее по гиперссылке ""Демо: Другие настройки..."" и включите соответствующий флаг.'");
		
		Если ВызыватьИсключение Тогда
			ВызватьИсключение ТекстСообщения;
		Иначе
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьВидПодарочногоСертификата(ПодарочныйСертификат) Экспорт 
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодарочныйСертификат, "Владелец");
КонецФункции

Функция ПолучитьРеквизитыВидаПодарочныхСертификатов(ВидПодарочныхСертификатов, ИменаРеквизитов) Экспорт
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидПодарочныхСертификатов, ИменаРеквизитов);
КонецФункции

Функция ПолучитьДатуОкончанияДействияСертификата(ПодарочныйСертификат, Дата) Экспорт
	Возврат ДобавитьМесяц(Дата, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПодарочныйСертификат, "Владелец.СрокДействия"));
КонецФункции

Функция ПолучитьСведенияОПодарочныхСертификатах(ПодарочныеСертификаты, МоментПолученияСведений) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификатыДокумента
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|ГДЕ
		|	ПодарочныеСертификаты.Ссылка В(&ПодарочныеСертификаты)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус КАК Статус
		|ПОМЕСТИТЬ ВТ_СтатусыПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификатыДокумента КАК ВТ_ПодарочныеСертификатыДокумента)) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиСуммПодарочныхСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(
		|			&ДатаОстатков,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификатыДокумента КАК ВТ_ПодарочныеСертификатыДокумента)) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
		|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат В
		|			(ВЫБРАТЬ
		|				ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат
		|			ИЗ
		|				ВТ_ПодарочныеСертификатыДокумента КАК ВТ_ПодарочныеСертификатыДокумента)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ВТ_СтатусыПодарочныхСертификатов.Статус КАК Статус,
		|	ВТ_ОстаткиСуммПодарочныхСертификатов.СуммаОстаток КАК ОстатокСуммы,
		|	ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо КАК ДействуетДо
		|ИЗ
		|	ВТ_ПодарочныеСертификатыДокумента КАК ВТ_ПодарочныеСертификатыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыПодарочныхСертификатов КАК ВТ_СтатусыПодарочныхСертификатов
		|		ПО ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат = ВТ_СтатусыПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
		|		ПО ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиСуммПодарочныхСертификатов КАК ВТ_ОстаткиСуммПодарочныхСертификатов
		|		ПО ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат = ВТ_ОстаткиСуммПодарочныхСертификатов.ПодарочныйСертификат";
	
	Запрос.УстановитьПараметр("ПодарочныеСертификаты", ПодарочныеСертификаты);
	Запрос.УстановитьПараметр("Дата", МоментПолученияСведений);                                                                                    
	Запрос.УстановитьПараметр("ДатаОстатков", ?(ТипЗнч(МоментПолученияСведений) = Тип("Дата"), МоментПолученияСведений + 1, МоментПолученияСведений));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();                 
	
	СведенияОПодарочныхСертификатах = Новый Соответствие;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекущиеСведения = Новый Структура("Статус, ОстатокСуммы, ДействуетДо");
		ЗаполнитьЗначенияСвойств(ТекущиеСведения, ВыборкаДетальныеЗаписи);
		СведенияОПодарочныхСертификатах.Вставить(ВыборкаДетальныеЗаписи.ПодарочныйСертификат, ТекущиеСведения);
	КонецЦикла;
	
	Возврат СведенияОПодарочныхСертификатах;
КонецФункции

Процедура ПроверитьНаличиеДублейПодарочныхСертификатовВДокументе(Документ, ТабличнаяЧасть, Отказ) Экспорт
	ВведенныеСертификаты = Новый Соответствие;

	Для Каждого Строка Из ТабличнаяЧасть Цикл
		Если ВведенныеСертификаты[Строка.ПодарочныйСертификат] = Неопределено Тогда
			ВведенныеСертификаты.Вставить(Строка.ПодарочныйСертификат, Строка.НомерСтроки);
		Иначе     
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат указан повторно!'"), Строка.НомерСтроки), Документ, "ПодарочныеСертификаты[" + Формат(Строка.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ЕстьДублиНомеровПодарочныхСертификатов() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.Код КАК Код,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодарочныеСертификаты.Ссылка) КАК Ссылка
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|ГДЕ
		|	НЕ ПодарочныеСертификаты.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодарочныеСертификаты.Код
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПодарочныеСертификаты.Ссылка) > 1";
	
	РезультатЗапроса = Запрос.Выполнить();
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции

Процедура ЗаполнитьСведенияОПодарочныхСертификатахВДокументе(Объект) Экспорт
	ЭтоРеализацияТоваров = ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка._ДемоРеализацияТоваров");
	
	Если ЭтоРеализацияТоваров Тогда                                                    
		МассивСертификатов = Объект.ОплатаПодарочнымиСертификатами.Выгрузить(, "ПодарочныйСертификат").ВыгрузитьКолонку("ПодарочныйСертификат");
	Иначе
		МассивСертификатов = Объект.ПодарочныеСертификаты.Выгрузить(, "ПодарочныйСертификат").ВыгрузитьКолонку("ПодарочныйСертификат");
	КонецЕсли;
	
	МоментПолученияСведений = ПолучитьМоментПолученияСведений(Объект.Ссылка, Объект.Дата);
	СведенияОПодарочныхСертификатах = ПолучитьСведенияОПодарочныхСертификатах(МассивСертификатов, МоментПолученияСведений);
	СтруктураПоиска = Новый Структура("ПодарочныйСертификат");
	
	Для Каждого Пара Из СведенияОПодарочныхСертификатах Цикл
		СтруктураПоиска.ПодарочныйСертификат = Пара.Ключ;
		
		Если ЭтоРеализацияТоваров Тогда
			Строки = Объект.ОплатаПодарочнымиСертификатами.НайтиСтроки(СтруктураПоиска);
		Иначе
			Строки = Объект.ПодарочныеСертификаты.НайтиСтроки(СтруктураПоиска);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Строки[0], Пара.Значение);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьИтоговыеСуммыНоминаловИНеиспользованныхОстатковПоВалютам(Форма) Экспорт
	ПодарочныеСертификаты = Форма.Объект.ПодарочныеСертификаты.Выгрузить(, "ПодарочныйСертификат").ВыгрузитьКолонку("ПодарочныйСертификат");
	ВидПодарочныхСертификатов = ?(Форма.ИмяФормы = "Документ.АннулированиеПодарочныхСертификатов.Форма.ФормаДокумента", Форма.Объект.ВидПодарочныхСертификатов, Неопределено);
	Форма.ИтоговыеСуммы = ПолучитьПредставлениеИтоговыхСуммНоминаловИНеиспользованныхОстатковПоВалютам(ПодарочныеСертификаты, Форма.Объект.Ссылка, Форма.Объект.Дата, ВидПодарочныхСертификатов);	
КонецПроцедуры

Функция РеализацияПодарочныхСертификатовПолучитьИтоговуюСтоимостьПоВалютам(МассивСертификатов) Экспорт
	ИтоговыеСтоимостиПоВалютам = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПодарочныеСертификаты.Владелец.НоминальнаяСтоимость) КАК НоминальнаяСтоимость,
		|	ПодарочныеСертификаты.Владелец.Валюта КАК Валюта
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|ГДЕ
		|	ПодарочныеСертификаты.Ссылка В(&МассивСертификатов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодарочныеСертификаты.Владелец.Валюта";
	
	Запрос.УстановитьПараметр("МассивСертификатов", МассивСертификатов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат = СтрШаблон(НСтр("ru = 'Итоговая стоимость:%1'"), Символы.Таб);

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), Символы.Таб, "") + 
					СтрШаблон("%1 %2", Формат(ВыборкаДетальныеЗаписи.НоминальнаяСтоимость, "ЧДЦ=2; ЧРД=,; ЧН=0,00"), ВыборкаДетальныеЗаписи.Валюта);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьПредставлениеИтоговыхСуммНоминаловИНеиспользованныхОстатковПоВалютам(ПодарочныеСертификаты, Ссылка, Дата, ВидПодарочныхСертификатов = Неопределено) Экспорт
	ТаблицаПодарочныхСертификатов = Новый ТаблицаЗначений;
	ТаблицаПодарочныхСертификатов.Колонки.Добавить("ПодарочныйСертификат", Новый ОписаниеТипов("СправочникСсылка.ПодарочныеСертификаты"));
	
	Для Каждого ПодарочныйСертификат Из ПодарочныеСертификаты Цикл
		ТаблицаПодарочныхСертификатов.Добавить().ПодарочныйСертификат = ПодарочныйСертификат
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификатыДокумента
		|ИЗ
		|	&ТаблицаПодарочныхСертификатов КАК ПодарочныеСертификаты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	Спр.Владелец.НоминальнаяСтоимость КАК НоминальнаяСтоимость,
		|	Спр.Владелец.Валюта КАК Валюта
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификаты
		|ИЗ
		|	ВТ_ПодарочныеСертификатыДокумента КАК ПодарочныеСертификатыДокумента
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПодарочныеСертификаты КАК Спр
		|		ПО ПодарочныеСертификатыДокумента.ПодарочныйСертификат = Спр.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК СуммаОстаток
		|ПОМЕСТИТЬ ВТ_ОстаткиСуммПодарочныхСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификатыДокумента.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификатыДокумента КАК ВТ_ПодарочныеСертификатыДокумента)) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ПодарочныеСертификаты.НоминальнаяСтоимость) КАК НоминальнаяСтоимость,
		|	СУММА(ЕСТЬNULL(ОстаткиСуммПодарочныхСертификатов.СуммаОстаток, 0)) КАК ОстатокСуммы,
		|	ПодарочныеСертификаты.Валюта КАК Валюта
		|ИЗ
		|	ВТ_ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиСуммПодарочныхСертификатов КАК ОстаткиСуммПодарочныхСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ОстаткиСуммПодарочныхСертификатов.ПодарочныйСертификат
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодарочныеСертификаты.Валюта";
	
	Запрос.УстановитьПараметр("ТаблицаПодарочныхСертификатов", ТаблицаПодарочныхСертификатов);
	
	МоментПолученияСведений = ПолучитьМоментПолученияСведений(Ссылка, Дата);
	Запрос.УстановитьПараметр("Дата", МоментПолученияСведений);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	РезультатПустой = РезультатЗапроса.Пустой();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ЗначениеЗаполнено(ВидПодарочныхСертификатов) Тогда
		Валюта = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидПодарочныхСертификатов, "Валюта");
	Иначе
		Валюта = "";
	КонецЕсли;
	
	Результат = СтрШаблон(НСтр("ru = 'Итого номинальная стоимость:	%1'"), ?(РезультатПустой, СтрШаблон("0,00 %1", Валюта), ""));

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), Символы.Таб, "") + 
			СтрШаблон("%1 %2", 
				Формат(ВыборкаДетальныеЗаписи.НоминальнаяСтоимость, "ЧДЦ=2; ЧРД=,; ЧН=0,00"), 
				ВыборкаДетальныеЗаписи.Валюта);
	КонецЦикла;

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();                 
	
	Результат = СтрШаблон("%1%2%3", Результат, "		", СтрШаблон(НСтр("ru = 'Итого не использовано:	%1'"), ?(РезультатПустой, СтрШаблон("0,00 %1", Валюта), "")));
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = Результат + Символы.Таб + 
			СтрШаблон("%1 %2", 
				Формат(ВыборкаДетальныеЗаписи.ОстатокСуммы, "ЧДЦ=2; ЧРД=,; ЧН=0,00"), 
				ВыборкаДетальныеЗаписи.Валюта);
	КонецЦикла;

	Возврат Результат;
КонецФункции

Функция ПолучитьМоментПолученияСведений(Ссылка, Дата) Экспорт
	Возврат ?(Ссылка.Пустая(), КонецДня(Дата), Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Исключая));
КонецФункции

Процедура УдалитьДвиженияДокументаПриПерепроведенииИУстановитьПризнакиЗаписиВРегистры(Движения) Экспорт
	Движения.ИсторияСтатусовПодарочныхСертификатов.Прочитать();
	
	Если Движения.ИсторияСтатусовПодарочныхСертификатов.Количество() > 0 Тогда
		Движения.ИсторияСтатусовПодарочныхСертификатов.Очистить();
		Движения.ИсторияСтатусовПодарочныхСертификатов.Записывать = Истина;
	КонецЕсли;

	Движения.ПодарочныеСертификаты.Прочитать();
	
	Если Движения.ПодарочныеСертификаты.Количество() > 0 Тогда
		Движения.ПодарочныеСертификаты.Очистить();
		Движения.ПодарочныеСертификаты.Записывать = Истина;
	КонецЕсли;

	Движения.Записать();	//очистка существующих движений при перепроведении

	//Снова устанавливаем признаки у наборов записей, так как выше сбросились (в случае перепроведения)
	Движения.ИсторияСтатусовПодарочныхСертификатов.Записывать = Истина;
	Движения.ПодарочныеСертификаты.Записывать = Истина;
КонецПроцедуры

Процедура ВыполнитьКонтрольПриОтменеПроведенияДокумента(Документ, Отказ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
		|	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ПодарочныеСертификаты.Ссылка) = ТИП(Документ.ВводОстатковПодарочныхСертификатов)
		|			ТОГДА #ПодарочныеСертификатыСтатус#
		|		КОГДА ТИПЗНАЧЕНИЯ(ПодарочныеСертификаты.Ссылка) = ТИП(Документ.ВыпускПодарочныхСертификатов)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Выпущен)
		|		КОГДА ТИПЗНАЧЕНИЯ(ПодарочныеСертификаты.Ссылка) = ТИП(Документ.РеализацияПодарочныхСертификатов)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован)
		|		КОГДА ТИПЗНАЧЕНИЯ(ПодарочныеСертификаты.Ссылка) = ТИП(Документ._ДемоРеализацияТоваров)
		|			ТОГДА 
		|				 ВЫБОР
		|					 КОГДА #ПодарочныеСертификатыСуммаОплаты# < ПодарочныеСертификаты.ПодарочныйСертификат.Владелец.НоминальнаяСтоимость ТОГДА
		|						  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован)
		|					 ИНАЧЕ
		|						  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован)
		|				 КОНЕЦ
		|		КОГДА ТИПЗНАЧЕНИЯ(ПодарочныеСертификаты.Ссылка) = ТИП(Документ.ВозвратПодарочныхСертификатов)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен)
		|	КОНЕЦ КАК Статус
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификаты
		|ИЗ
		|	#ИмяТаблицы# КАК ПодарочныеСертификаты
		|ГДЕ
		|	ПодарочныеСертификаты.Ссылка = &Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
		|	ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ИсторияСтатусовПодарочныхСертификатов.Регистратор КАК ПоследующийДокумент
		|ИЗ
		|	ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|		ПО ВТ_ПодарочныеСертификаты.ПодарочныйСертификат = ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|			И (ВЫБОР
		|				КОГДА ВТ_ПодарочныеСертификаты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Выпущен)
		|					ТОГДА ИсторияСтатусовПодарочныхСертификатов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
		|				КОГДА ВТ_ПодарочныеСертификаты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован)
		|					ТОГДА ИсторияСтатусовПодарочныхСертификатов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
		|				КОГДА ВТ_ПодарочныеСертификаты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован)
		|					ТОГДА ИсторияСтатусовПодарочныхСертификатов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен), 
		|																		  ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
		|				КОГДА ВТ_ПодарочныеСертификаты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован)
		|					ТОГДА ИсторияСтатусовПодарочныхСертификатов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
		|				КОГДА ВТ_ПодарочныеСертификаты.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен)
		|					ТОГДА ИсторияСтатусовПодарочныхСертификатов.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
		|			КОНЕЦ)
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки,
		|	ИсторияСтатусовПодарочныхСертификатов.Период";
	
	ИмяДокумента = Документ.Метаданные().Имя;
	ИмяТабличнойЧасти = ?(ИмяДокумента = "_ДемоРеализацияТоваров", "ОплатаПодарочнымиСертификатами", "ПодарочныеСертификаты");
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ИмяТаблицы#", "Документ." + ИмяДокумента + "." + ИмяТабличнойЧасти);
	
	Если ИмяДокумента = "ВводОстатковПодарочныхСертификатов" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПодарочныеСертификатыСтатус#", "ПодарочныеСертификаты.Статус");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПодарочныеСертификатыСтатус#", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ИмяДокумента = "_ДемоРеализацияТоваров" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПодарочныеСертификатыСуммаОплаты#", "ПодарочныеСертификаты.СуммаОплаты");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПодарочныеСертификатыСуммаОплаты#", "0");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 с подарочным сертификатом проведена дальнейшая операция! (%2)'"), ВыборкаДетальныеЗаписи.НомерСтроки, ВыборкаДетальныеЗаписи.ПоследующийДокумент), Документ, ИмяТабличнойЧасти + "[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
	КонецЦикла;
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Невозможно отменить проведение документа!'"));
	КонецЕсли;
КонецПроцедуры

//Процедура удаляет строки документов "Реализация подарочных сертификатов", "Возврат подарочных сертификатов", "Аннулирование подарочных сертификатов" (без указания вида в шапке),
//в которых указаны ссылки на несуществующие подарочные сертификаты (это может возникнуть в результате обмена, когда документ был передан в данную базу, а подарочный сертификат - нет
Процедура УдалитьСтрокиДокументаСНесуществующимиПодарочнымиСертификатами(Документ) Экспорт
	ВсегоСтрок = Документ.ПодарочныеСертификаты.Количество();
	Для Н = 1 По ВсегоСтрок Цикл
		Строка = Документ.ПодарочныеСертификаты[ВсегоСтрок - Н];
		
		Если Строка.ПодарочныйСертификат.ПолучитьОбъект() = Неопределено Тогда
			Документ.ПодарочныеСертификаты.Удалить(Строка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры