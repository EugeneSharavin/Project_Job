
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)	
	Элементы.Действует.Видимость = НЕ Объект.Ссылка.Пустая();
	
	Элементы.ФормаОбработкаГенерацияПодарочныхСертификатовСгенерироватьПодарочныеСертификаты.Видимость = Элементы.Действует.Видимость;
	
	ЕстьАктивированныеСертификатыТекущегоВида = Элементы.Действует.Видимость И ЕстьАктивированныеСертификатыТекущегоВида(Объект.Ссылка);
	Элементы.ФормаРазблокироватьРеквизиты.Видимость = ЕстьАктивированныеСертификатыТекущегоВида;
	Элементы.ФормаРазблокироватьРеквизиты.Пометка = ЕстьАктивированныеСертификатыТекущегоВида;
	
	Элементы.ДекорацияНадписьРеквизитыЗаблокированыОтРедактирования.Видимость = ЕстьАктивированныеСертификатыТекущегоВида;
	
	ШагНоминальнойСтоимости = Константы.ШагНоминальнойСтоимостиПодарочныхСертификатов.Получить();
	Элементы.НоминальнаяСтоимость.КнопкаРегулирования = ШагНоминальнойСтоимости > 0;
	ВариантИспользования = ?(Объект.МногократноеИспользование, "Многократное", "Однократное");
	
	ИзменитьДоступностьРеквизитовФормы();                      
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.МногократноеИспользование = ВариантИспользования = "Многократное";
КонецПроцедуры

&НаКлиенте
Процедура НоминальнаяСтоимостьРегулирование(Элемент, Направление, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Объект.НоминальнаяСтоимость = Объект.НоминальнаяСтоимость + ШагНоминальнойСтоимости * Направление;
	
	Если НЕ ЗначениеЗаполнено(Объект.НоминальнаяСтоимость) Тогда
		Объект.НоминальнаяСтоимость = ШагНоминальнойСтоимости;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НоминальнаяСтоимостьПриИзменении(Элемент)
	Если ЗначениеЗаполнено(ШагНоминальнойСтоимости) Тогда
		Если Объект.НоминальнаяСтоимость % ШагНоминальнойСтоимости <> 0 Тогда
			КоличествоШагов = Цел(Объект.НоминальнаяСтоимость / ШагНоминальнойСтоимости);
			Разница = Объект.НоминальнаяСтоимость - ШагНоминальнойСтоимости * КоличествоШагов;
			
			Если Разница >= ШагНоминальнойСтоимости / 2 Тогда
				Объект.НоминальнаяСтоимость = ШагНоминальнойСтоимости * (КоличествоШагов + 1);
			Иначе
				Объект.НоминальнаяСтоимость = ШагНоминальнойСтоимости * КоличествоШагов;
				
				Если НЕ ЗначениеЗаполнено(Объект.НоминальнаяСтоимость) Тогда
					Объект.НоминальнаяСтоимость = ШагНоминальнойСтоимости;
				КонецЕсли;
			КонецЕсли;
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Скорректирована номинальная стоимость согласно установленному шагу'"));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНаименование(Команда)
	Если ЗначениеЗаполнено(Объект.Наименование) Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОПерезаписиНаименования", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Наименование не пустое. Вы хотите перезаполнить наименование согласно введенным данным?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		СгенерироватьНаименованиеВидаПодарочныхСертификатов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОПерезаписиНаименования(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СгенерироватьНаименованиеВидаПодарочныхСертификатов();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНаименованиеВидаПодарочныхСертификатов()
	Объект.Наименование = СтрШаблон(НСтр("ru = '%1 %2 (%3 мес, %4, %5)'"), 
								Объект.НоминальнаяСтоимость,
								Объект.Валюта,
								Объект.СрокДействия,
								?(Объект.Возвратный, НСтр("ru = 'возвратный'"), НСтр("ru = 'невозвратный'")),
							    ?(Объект.МногократноеИспользование, НСтр("ru = 'многократный'"), НСтр("ru = 'однократный'")));
КонецПроцедуры

&НаКлиенте
Процедура ДействуетПриИзменении(Элемент)
	Если НЕ Объект.Действует Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросПриОтключенииПризнакаДействует", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'После отключения признака ""Действует"" будет невозможно сгенерировать и активировать ранее сгенерированные сертификаты данного вида! Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ИзменитьДоступностьРеквизитовФормы();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросПриОтключенииПризнакаДействует(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ИзменитьДоступностьРеквизитовФормы();
	Иначе
		Объект.Действует = Истина;
	КонецЕсли;
КонецПроцедуры
									
&НаСервере
Процедура ИзменитьДоступностьРеквизитовФормы()
	Элементы.Действует.Подсказка = ?(Объект.Действует, 
										НСтр("ru = 'Вид подарочных сертификатов является действующим. 
												   |Разрешен ввод новых сертификатов.'"),
										НСтр("ru = 'Вид подарочных сертификатов является не действующим. 
												   |Ввод новых сертификатов запрещен. 
												   |Ранее активированные сертификаты действительны.'"));
										
	РедактированиеРеквизитовРазрешено = (НЕ Элементы.ФормаРазблокироватьРеквизиты.Видимость ИЛИ НЕ Элементы.ФормаРазблокироватьРеквизиты.Пометка) И Объект.Действует;										
										
	Элементы.Наименование.ТолькоПросмотр 			= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.Код.ТолькоПросмотр 					= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.НоминальнаяСтоимость.ТолькоПросмотр 	= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.Валюта.ТолькоПросмотр 					= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.СрокДействия.ТолькоПросмотр 			= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.Возвратный.ТолькоПросмотр 				= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.ВариантИспользования.ТолькоПросмотр 	= НЕ РедактированиеРеквизитовРазрешено;
	Элементы.ШаблонНомера.ТолькоПросмотр 			= НЕ РедактированиеРеквизитовРазрешено;
	
	Элементы.ФормаОбработкаГенерацияПодарочныхСертификатовСгенерироватьПодарочныеСертификаты.Доступность = РедактированиеРеквизитовРазрешено;
	Элементы.СгенерироватьНаименование.Доступность = РедактированиеРеквизитовРазрешено;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    Элементы.Действует.Видимость = Истина;
	Элементы.ФормаОбработкаГенерацияПодарочныхСертификатовСгенерироватьПодарочныеСертификаты.Видимость = Истина;
	Оповестить("ВидПодарочныхСертификатов_Запись");
КонецПроцедуры

&НаКлиенте
Процедура ВариантИспользованияПриИзменении(Элемент)
	Объект.МногократноеИспользование = ВариантИспользования = "Многократное";
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьАктивированныеСертификатыТекущегоВида(ВидПодарочныхСертификатов)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	1 КАК Поле1
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(, ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован))";
	
	Запрос.УстановитьПараметр("ВидПодарочныхСертификатов", ВидПодарочныхСертификатов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
КонецФункции

&НаКлиенте
Процедура РазблокироватьРеквизиты(Команда)
	Элементы.ФормаРазблокироватьРеквизиты.Пометка = НЕ Элементы.ФормаРазблокироватьРеквизиты.Пометка;
	ИзменитьДоступностьРеквизитовФормы();                      	
КонецПроцедуры
									
									
	
	