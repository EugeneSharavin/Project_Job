
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Ссылка") И Параметры.Свойство("Дата") Тогда
		МоментПолученияСведений = ПодарочныеСертификатыСервер.ПолучитьМоментПолученияСведений(Параметры.Ссылка, Параметры.Дата);
		Список.Параметры.УстановитьЗначениеПараметра("Момент", МоментПолученияСведений);
		
		Если ЗначениеЗаполнено(Параметры.Ссылка) Тогда
			Элементы.ТекущийСтатус.Заголовок = "Статус на момент документа";
		КонецЕсли;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("Момент", Неопределено);
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоДействующиеВиды") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Владелец.Действует",  
				ВидСравненияКомпоновкиДанных.Равно, Истина, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
			
	Если Параметры.Свойство("ВыбранныеПодарочныеСертификаты") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Ссылка",  
				ВидСравненияКомпоновкиДанных.НеВСписке, Параметры.ВыбранныеПодарочныеСертификаты, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
			
	Если Параметры.Свойство("ТолькоНеАктивированные") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат
			|ИЗ
			|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
			|		ПО (ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
			|		И ИсторияСтатусовПодарочныхСертификатов.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Выпущен)
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов2
			|		ПО (ИсторияСтатусовПодарочныхСертификатов2.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
			|		И ИсторияСтатусовПодарочныхСертификатов2.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), 
			|														   ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован), 
			|														   ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), 
			|														   ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен), 
			|														   ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
			|ГДЕ
			|	ИсторияСтатусовПодарочныхСертификатов2.Период ЕСТЬ NULL";
		
		РезультатЗапроса = Запрос.Выполнить();
		
		НеАктивированныеСертификаты = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ПодарочныйСертификат");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Ссылка",  
				ВидСравненияКомпоновкиДанных.ВСписке, НеАктивированныеСертификаты, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоАктивированные") И Параметры.Свойство("Ссылка") И Параметры.Свойство("Дата") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат
			|ПОМЕСТИТЬ ВТ_ДействующиеСертификаты
			|ИЗ
			|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(&Момент, ) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
			|ГДЕ
			|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
			|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
			|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
			|ИЗ
			|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
			|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК ОстатокСтоимости
			|ПОМЕСТИТЬ ВТ_ОстаткиСтоимости
			|ИЗ
			|	РегистрНакопления.ПодарочныеСертификаты.Остатки(&ДатаОстатков, ) КАК ПодарочныеСертификатыОстатки
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	ПодарочныйСертификат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДействующиеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
			|ИЗ
			|	ВТ_ДействующиеСертификаты КАК ВТ_ДействующиеСертификаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
			|		ПО ВТ_ДействующиеСертификаты.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
			|			И (КОНЕЦПЕРИОДА(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДЕНЬ) >= &Дата)
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиСтоимости КАК ВТ_ОстаткиСтоимости
			|		ПО ВТ_ДействующиеСертификаты.ПодарочныйСертификат = ВТ_ОстаткиСтоимости.ПодарочныйСертификат";
		
		Запрос.УстановитьПараметр("Момент", МоментПолученияСведений);
		Запрос.УстановитьПараметр("Дата", Параметры.Дата);
		Запрос.УстановитьПараметр("ДатаОстатков", ?(ТипЗнч(МоментПолученияСведений) = Тип("Дата"), МоментПолученияСведений + 1, МоментПолученияСведений));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		АктивированныеСертификаты = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ПодарочныйСертификат");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Ссылка",  
				ВидСравненияКомпоновкиДанных.ВСписке, АктивированныеСертификаты, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоНеАннулированные") И Параметры.Свойство("Ссылка") И Параметры.Свойство("Дата") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат
			|ПОМЕСТИТЬ ВТ_ДействующиеСертификаты
			|ИЗ
			|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(&Момент, ) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
			|ГДЕ
			|	НЕ ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован))
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
			|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
			|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
			|ИЗ
			|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
			|
			|СГРУППИРОВАТЬ ПО
			|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВТ_ДействующиеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
			|ИЗ
			|	ВТ_ДействующиеСертификаты КАК ВТ_ДействующиеСертификаты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
			|		ПО ВТ_ДействующиеСертификаты.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
			|			И (КОНЕЦПЕРИОДА(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДЕНЬ) < &Дата)";
		
		Запрос.УстановитьПараметр("Момент", МоментПолученияСведений);
		Запрос.УстановитьПараметр("Дата", Параметры.Дата);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		НеАннулированныеСертификаты = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ПодарочныйСертификат");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Ссылка",  
				ВидСравненияКомпоновкиДанных.ВСписке, НеАннулированныеСертификаты, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;

	Если Параметры.Свойство("ВидПодарочныхСертификатов") И ЗначениеЗаполнено(Параметры.ВидПодарочныхСертификатов) Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Владелец",  
				ВидСравненияКомпоновкиДанных.Равно, Параметры.ВидПодарочныхСертификатов, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	Если Параметры.Свойство("Валюта") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Владелец.Валюта",  
				ВидСравненияКомпоновкиДанных.Равно, Параметры.Валюта, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	Если Параметры.Свойство("ТолькоВозвратные") Тогда
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Список.Отбор, "Владелец.Возвратный",  
				ВидСравненияКомпоновкиДанных.Равно, Истина, , Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
КонецПроцедуры
