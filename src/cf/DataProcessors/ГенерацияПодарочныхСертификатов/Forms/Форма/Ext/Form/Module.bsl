
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ВидПодарочныхСертификатов") Тогда
		Объект.ВидПодарочныхСертификатов = Параметры.ВидПодарочныхСертификатов;
		ВидПодарочныхСертификатовПриИзмененииНаСервере();
	КонецЕсли;
	
	Объект.ВариантГенерацииПодарочныхСертификатов = "с номерами в указанном диапазоне";
	
	ОбновитьСостояниеКонтрольяУникальностиНомеров();   
	
	Объект.Ответственный = Пользователи.ТекущийПользователь();
	
	//В текущей версии технологической платформы номер строки имеет длину (разрядность) 5 знаков,
	//но в перспективных версиях анонсировали увеличение разрядности
	РазрядностьНомераСтрокиТабличнойЧасти = 
		Метаданные.Документы.АннулированиеПодарочныхСертификатов.ТабличныеЧасти.ПодарочныеСертификаты.СтандартныеРеквизиты.НомерСтроки.Тип.КвалификаторыЧисла.Разрядность;
		
	МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска = 
		Константы.МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска.Получить();
		
	Если МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска = 0 Тогда
		МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска = 1000;
	КонецЕсли;
	
	Элементы.ВвестиМаксимальноеКоличествоПодарочныхСертификатовВДокументе.Заголовок = 
		СтрШаблон(НСтр("ru = 'Максимальное количество подарочных сертификатов в документе выпуска: %1'"), 
		МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска);
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеКонтрольяУникальностиНомеров()
	ЕстьДублиНомеров = ПодарочныеСертификатыСервер.ЕстьДублиНомеровПодарочныхСертификатов();
	
	Элементы.КонтрольУникальностиНомеров.ТолькоПросмотр = ЕстьДублиНомеров;
	Элементы.КонтрольУникальностиНомеров.ОтображениеПодсказки = ?(ЕстьДублиНомеров, ОтображениеПодсказки.ОтображатьСправа, ОтображениеПодсказки.Нет);
	
	Объект.КонтрольУникальностиНомеров = ?(ЕстьДублиНомеров, "в рамках выбранного вида", 
										?(Константы.КонтролироватьУникальностьНомеровПодарочныхСертификатовПоВсемВидам.Получить(), 
											"по всем видам сертификатов", "в рамках выбранного вида"));
КонецПроцедуры
	
&НаСервере
Процедура ЗаполнитьПодарочныеСертификаты()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|ГДЕ
		|	ПодарочныеСертификаты.Владелец = &ВидПодарочныхСертификатов
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодарочныеСертификаты.Код";
	
	Запрос.УстановитьПараметр("ВидПодарочныхСертификатов", Объект.ВидПодарочныхСертификатов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Объект.ПодарочныеСертификаты.Загрузить(РезультатЗапроса.Выгрузить());	
КонецПроцедуры

&НаСервере
Процедура ВидПодарочныхСертификатовПриИзмененииНаСервере()
	Объект.ШаблонНомера = ПолучитьШаблонНомеровПодарочныхСертификатов(Объект.ВидПодарочныхСертификатов);
	Элементы.ДиапазонНомераС.Маска = Объект.ШаблонНомера;
	Элементы.ДиапазонНомераПо.Маска = Объект.ШаблонНомера;
	
	ЗаполнитьПодарочныеСертификаты();
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ВидПодарочныхСертификатовПриИзмененииНаСервере();
	Иначе
		Объект.ПодарочныеСертификаты.Очистить();
		Объект.ШаблонНомера = "";
		Объект.ДиапазонНомераС = "";
		Объект.ДиапазонНомераПо = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВариантГенерацииПодарочныхСертификатовПриИзменении(Элемент)
	Элементы.ГруппаДиапазонНомеровПодарочныхСертификатов.Видимость = 
		Объект.ВариантГенерацииПодарочныхСертификатов = "с номерами в указанном диапазоне";
КонецПроцедуры

&НаКлиенте
Процедура ВариантГенерацииПодарочныхСертификатовОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура КонтрольУникальностиНомеровПриИзмененииНаСервере(КонтрольУникальностиНомеров)
	Константы.КонтролироватьУникальностьНомеровПодарочныхСертификатовПоВсемВидам.Установить(КонтрольУникальностиНомеров = "по всем видам сертификатов");
КонецПроцедуры

&НаКлиенте
Процедура КонтрольУникальностиНомеровПриИзменении(Элемент)
	КонтрольУникальностиНомеровПриИзмененииНаСервере(Объект.КонтрольУникальностиНомеров);
КонецПроцедуры

&НаСервере
Функция СгенерироватьПодарочныеСертификатыНаСервере()
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	Результат = ОбъектОбработки.СгенерироватьПодарочныеСертификаты();
	ЗначениеВРеквизитФормы(ОбъектОбработки, "Объект");
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СгенерироватьПодарочныеСертификаты(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОГенерацииПодарочныхСертификатов", ЭтотОбъект);
	ТекстВопроса = СтрШаблон(НСтр("ru = 'Сгенерировать подарочные сертификаты%1%2?'"),
								Символы.ПС,
								НСтр("ru = '" + Объект.ВариантГенерацииПодарочныхСертификатов + "'"));
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОГенерацииПодарочныхСертификатов(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Если СгенерироватьПодарочныеСертификатыНаСервере() Тогда
			ОбновитьСостояниеКонтрольяУникальностиНомеров();
			ПоказатьОповещениеПользователя(НСтр("ru = 'Подарочные сертификаты успешно сгенерированы'"));
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШаблонНомеровПодарочныхСертификатов(ВидПодарочныхСертификатов)
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидПодарочныхСертификатов, "ШаблонНомера");		
КонецФункции

&НаКлиенте
Процедура ОбновитьСписокСертификатов(Команда)
	ЗаполнитьПодарочныеСертификаты();
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ПоказатьЗначение(, Объект.ПодарочныеСертификаты.НайтиПоИдентификатору(ВыбраннаяСтрока).ПодарочныйСертификат);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьМаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска(МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска)
	Константы.МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска.Установить(МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска);
КонецПроцедуры

&НаКлиенте
Процедура ВвестиМаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска(Команда)
	ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения("ОбработатьВводМаксимальногоКоличестваПодарочныхСертификатовВДокументеВыпуска", ЭтотОбъект);
	ТекстЗаголовка = НСтр("ru = 'MAX кол-во строк в документе выпуска'");
	ПоказатьВводЧисла(ОписаниеОповещенияОЗакрытии, МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска, ТекстЗаголовка, РазрядностьНомераСтрокиТабличнойЧасти, 0);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВводМаксимальногоКоличестваПодарочныхСертификатовВДокументеВыпуска(ВведенноеЧисло, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(ВведенноеЧисло) = Тип("Число") Тогда
		Если ВведенноеЧисло > 0 Тогда                                     
			МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска = ВведенноеЧисло;
			СохранитьМаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска(
				МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска);
				
			Элементы.ВвестиМаксимальноеКоличествоПодарочныхСертификатовВДокументе.Заголовок = 
				СтрШаблон(НСтр("ru = 'Максимальное количество подарочных сертификатов в документе выпуска: %1'"), 
				МаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Укажите ненулевое число!'"));
			ВвестиМаксимальноеКоличествоПодарочныхСертификатовВДокументеВыпуска(Неопределено);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
