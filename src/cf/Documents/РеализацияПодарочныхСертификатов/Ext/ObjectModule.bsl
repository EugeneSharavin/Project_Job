
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ПодарочныеСертификатыСервер.УдалитьСтрокиДокументаСНесуществующимиПодарочнымиСертификатами(ЭтотОбъект);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	ПодарочныеСертификатыСервер.ПроверитьНаличиеДублейПодарочныхСертификатовВДокументе(ЭтотОбъект, ПодарочныеСертификаты, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтатусАктивирован = Перечисления.СтатусыПодарочныхСертификатов.Активирован;
	
	Движения.ИсторияСтатусовПодарочныхСертификатов.Записывать = Истина;
	Движения.ПодарочныеСертификаты.Записывать = Истина;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат.Владелец.Действует КАК ВидСертификатаДействует,
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат.Владелец.НоминальнаяСтоимость КАК НоминальнаяСтоимость,
		|	ДОБАВИТЬКДАТЕ(&Дата, МЕСЯЦ, РеализацияПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат.Владелец.СрокДействия) КАК ДействуетДо,
		|	ИсторияСтатусовПодарочныхСертификатов.Период ЕСТЬ НЕ NULL  КАК ЕстьСтатусСертификата
		|ИЗ
		|	Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК РеализацияПодарочныхСертификатовПодарочныеСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|		ПО РеализацияПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат = ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|			И (ИсторияСтатусовПодарочныхСертификатов.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Выпущен))
		|			И (ИсторияСтатусовПодарочныхСертификатов.Регистратор <> &Ссылка)
		|ГДЕ
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	РеализацияПодарочныхСертификатовПодарочныеСертификаты.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НЕ ВыборкаДетальныеЗаписи.ВидСертификатаДействует Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 указан подарочный сертификат недействующего вида!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.ЕстьСтатусСертификата Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат уже был активирован!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ИсторияСтатусовПодарочныхСертификатов.Добавить();
		Движение.Период = Дата;
		Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
		Движение.Статус = СтатусАктивирован;
		Движение.ДействуетДо = ВыборкаДетальныеЗаписи.ДействуетДо;
		Движение.Ответственный = Ответственный;
		
		Движение = Движения.ПодарочныеСертификаты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
		Движение.Сумма = ВыборкаДетальныеЗаписи.НоминальнаяСтоимость;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ПодарочныеСертификатыСервер.ВыполнитьКонтрольПриОтменеПроведенияДокумента(Ссылка, Отказ);
КонецПроцедуры

#КонецОбласти

#КонецЕсли