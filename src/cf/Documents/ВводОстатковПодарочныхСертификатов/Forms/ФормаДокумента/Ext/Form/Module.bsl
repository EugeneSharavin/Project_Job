
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьВалютуИНоминальнуюСтоимость(Истина);
	СтатусАктивирован = Перечисления.СтатусыПодарочныхСертификатов.Активирован;
	Элементы.ДекорацияНадписьВидНеДействует.Видимость = ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) И 
														НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "Действует");
														
	Если Объект.Ссылка.Пустая() Тогда														
		СпособВводаПодарочногоСертификата = "Строкой (по номеру)";                                                                   
	Иначе
		СпособВводаПодарочногоСертификата = "Выбором существующего";
	КонецЕсли;
	
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьВалютуИНоминальнуюСтоимость();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьВалютуИНоминальнуюСтоимость();
	СпособВводаПодарочногоСертификата = "Выбором существующего";
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВалютуИНоминальнуюСтоимость(ЗаполнитьСписокДоступныхСтатусов = Ложь)
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		РеквизитыВидаПодарочныхСертификатов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПодарочныхСертификатов, "Валюта, НоминальнаяСтоимость, Возвратный, МногократноеИспользование");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыВидаПодарочныхСертификатов);                                                                                                             
		
		Если ЗаполнитьСписокДоступныхСтатусов Тогда
			ДоступныеСтатусы = Новый Массив;
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Выпущен);
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Активирован);
			
			Если РеквизитыВидаПодарочныхСертификатов.МногократноеИспользование Тогда
				ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.ЧастичноИспользован);
			КонецЕсли;
			
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.ПолностьюИспользован);
			
			Если РеквизитыВидаПодарочныхСертификатов.Возвратный Тогда
				ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Возвращен);
			КонецЕсли;
			
			ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Аннулирован);
			
			Элементы.ПодарочныеСертификатыСтатус.СписокВыбора.ЗагрузитьЗначения(ДоступныеСтатусы);
		КонецЕсли;
		
		Элементы.ДекорацияНадписьВидНеДействует.Видимость = НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "Действует");
	Иначе 
		Валюта = Неопределено;
		НоминальнаяСтоимость = 0;
	КонецЕсли;

	Для Каждого Строка Из Объект.ПодарочныеСертификаты Цикл 
		Строка.Валюта = Валюта;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовПриИзменении(Элемент)
	ЗаполнитьВалютуИНоминальнуюСтоимость(Истина);
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнен вид подарочных сертификатов!'"), , "ВидПодарочныхСертификатов", "Объект", Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.ПодарочныеСертификаты.ТекущиеДанные.Валюта = Валюта;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Если ВыбранноеЗначение <> Объект.ВидПодарочныхСертификатов И Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти", ЭтотОбъект, 
										Новый Структура("СтарыйВидПодарочныхСертификатов, СтараяВалюта, СтараяНоминальнаяСтоимость", 
															Объект.ВидПодарочныхСертификатов, Валюта, НоминальнаяСтоимость));
		ТекстВопроса = НСтр("ru = 'Табличная часть содержит строки. При изменении вида подарочных сертификатов они будут удалены. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ПодарочныеСертификаты.Очистить();
	Иначе     
		Объект.ВидПодарочныхСертификатов = ДополнительныеПараметры.СтарыйВидПодарочныхСертификатов;
		НоминальнаяСтоимость = ДополнительныеПараметры.НоминальнаяСтоимость;
		Валюта = ДополнительныеПараметры.СтараяВалюта;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СпособВводаПодарочногоСертификатаПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ВыбиратьСуществующие = СпособВводаПодарочногоСертификата = "Выбором существующего";
		
		Если ВыбиратьСуществующие Тогда
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодарочныеСертификаты");
		Иначе
			ДлинаНомера = СтрДлина(СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "ШаблонНомера")));		
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.ОграничениеТипа = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(ДлинаНомера));
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.Маска = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "ШаблонНомера"); 
		КонецЕсли;
		
		Элементы.ПодарочныеСертификатыПодарочныйСертификат.КнопкаВыбора = ВыбиратьСуществующие;
		Элементы.ПодарочныеСертификатыПодбор.Видимость = ВыбиратьСуществующие;
	Иначе
		Элементы.ПодарочныеСертификатыПодбор.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособВводаПодарочногоСертификатаПриИзменении(Элемент)
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыСтатусПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные; 
	Если ТекущиеДанные.Статус = СтатусАктивирован Тогда
		ТекущиеДанные.ОстатокСуммы = НоминальнаяСтоимость;
	Иначе
		ТекущиеДанные.ОстатокСуммы = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПриИзменении(Элемент)
	Объект.ОстатокСуммы = Объект.ПодарочныеСертификаты.Итог("ОстатокСуммы");
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьПодборПодарочныхСертификатов", ПодарочныеСертификатыКлиент, Новый Структура("Форма", ЭтотОбъект)); 
	ОткрытьФорму("Справочник.ПодарочныеСертификаты.Форма.ФормаВыбора", Новый Структура("МножественныйВыбор, ВидПодарочныхСертификатов", Истина, Объект.ВидПодарочныхСертификатов), , ,  , , ОписаниеОповещения);
КонецПроцедуры
