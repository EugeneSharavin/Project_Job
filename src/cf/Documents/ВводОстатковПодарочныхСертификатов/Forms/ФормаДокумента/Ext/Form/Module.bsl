
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов();
	СтатусАктивирован = Перечисления.СтатусыПодарочныхСертификатов.Активирован;
	Элементы.ДекорацияНадписьВидНеДействует.Видимость = ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) И 
														НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "Действует");
														
	Если Объект.Ссылка.Пустая() Тогда														
		СпособВводаПодарочногоСертификата = "Строкой (по номеру)";                                                                   
	Иначе
		СпособВводаПодарочногоСертификата = "Выбором существующего";
	КонецЕсли;
	
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
	
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ЗаполнитьСписокДоступныхСтатусов();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов()
	ДоступныеСтатусы = Новый Массив;
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Выпущен);
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Активирован);
	
	РеквизитыВидаПодарочныхСертификатов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПодарочныхСертификатов, "Возвратный, МногократноеИспользование");
	Если РеквизитыВидаПодарочныхСертификатов.МногократноеИспользование Тогда
		ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.ЧастичноИспользован);
	КонецЕсли;
	
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.ПолностьюИспользован);
	
	Если РеквизитыВидаПодарочныхСертификатов.Возвратный Тогда
		ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Возвращен);
	КонецЕсли;
	
	ДоступныеСтатусы.Добавить(Перечисления.СтатусыПодарочныхСертификатов.Аннулирован);
	
	Элементы.ПодарочныеСертификатыСтатус.СписокВыбора.ЗагрузитьЗначения(ДоступныеСтатусы);
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов();
	СпособВводаПодарочногоСертификата = "Выбором существующего";
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если СпособВводаПодарочногоСертификата = "Строкой (по номеру)" Тогда 
		СтрокиСНезаполненнымиНомерамиСертификатов = Объект.ПодарочныеСертификаты.НайтиСтроки(Новый Структура("НомерПодарочногоСертификатаНеВведен", Истина));
		
		Для Каждого Строка Из СтрокиСНезаполненнымиНомерамиСертификатов Цикл
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 не указан номер подарочного сертификата!'"), Строка.НомерСтроки), , "ПодарочныеСертификаты[" + Формат(Строка.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", "Объект", Отказ);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЗаполнитьИтоговыеСуммыНоминаловИНеиспользованныхОстатков(Форма)
	ИтогоНоминальнаяСтоимость = 0;
	
	Для Каждого Строка Из Форма.Объект.ПодарочныеСертификаты Цикл
		Если ЗначениеЗаполнено(Строка.ПодарочныйСертификат) И НЕ Строка.НомерПодарочногоСертификатаНеВведен Тогда
			ИтогоНоминальнаяСтоимость = ИтогоНоминальнаяСтоимость + Форма.НоминальнаяСтоимость;
		КонецЕсли;
	КонецЦикла;
	
	ИтогоОстатокСуммы = Форма.Объект.ОстатокСуммы;
	
	Форма.ИтоговыеСуммы = СтрШаблон(НСтр("ru = 'Итого номинальная стоимость:	%1 %3		Итого не использовано:	%2 %3'"), 
						Формат(ИтогоНоминальнаяСтоимость, "ЧДЦ=2; ЧРД=,; ЧН=0,00"),
						Формат(ИтогоОстатокСуммы, "ЧДЦ=2; ЧРД=,; ЧН=0,00"),
						?(ЗначениеЗаполнено(Форма.Объект.ВидПодарочныхСертификатов), Форма.Валюта, ""));
КонецФункции
						
&НаСервере
Процедура ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов()
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		РеквизитыВидаПодарочныхСертификатов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.ВидПодарочныхСертификатов, "Валюта, НоминальнаяСтоимость");
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыВидаПодарочныхСертификатов);
		ВидПодарочныхСертификатов = Объект.ВидПодарочныхСертификатов;
		
		Элементы.ДекорацияНадписьВидНеДействует.Видимость = НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "Действует");
	Иначе 
		Валюта = Неопределено;
		НоминальнаяСтоимость = 0;
	КонецЕсли;

	Для Каждого Строка Из Объект.ПодарочныеСертификаты Цикл 
		Строка.НоминальнаяСтоимость = НоминальнаяСтоимость;
		Строка.Валюта = Валюта;
	КонецЦикла;
	
	ЗаполнитьИтоговыеСуммыНоминаловИНеиспользованныхОстатков(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		Если Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти", ЭтотОбъект, 
									Новый Структура("СтарыйВидПодарочныхСертификатов, СтараяВалюта, СтараяНоминальнаяСтоимость", 
														ВидПодарочныхСертификатов, Валюта, НоминальнаяСтоимость));
															
			ТекстВопроса = НСтр("ru = 'Табличная часть содержит строки. При очистке вида подарочных сертификатов они будут удалены. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Иначе     
			ЗаполнитьИтоговыеСуммыНоминаловИНеиспользованныхОстатков(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если НЕ ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заполнен вид подарочных сертификатов!'"), , "ВидПодарочныхСертификатов", "Объект", Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиПодарочныйСертификатВНачалоВводаНомера(ТекущиеДанные)
	ТекущиеДанные.НомерПодарочногоСертификатаНеВведен = Истина;
	ТекущиеДанные.ПодарочныйСертификат = ШаблонНомера;
	
	Попытка
		Wsh = Новый COMОбъект("Wscript.shell");
		Wsh.SendKeys("{LEFT}");
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока И НЕ Копирование Тогда                                           
		ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные;
				
		Если СпособВводаПодарочногоСертификата = "Строкой (по номеру)" Тогда
			ПеревестиПодарочныйСертификатВНачалоВводаНомера(ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВидПодарочныхСертификатов = Объект.ВидПодарочныхСертификатов;
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Если ВыбранноеЗначение <> Объект.ВидПодарочныхСертификатов Тогда
		Если Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
			ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти", ЭтотОбъект, 
											Новый Структура("СтарыйВидПодарочныхСертификатов, СтараяВалюта, СтараяНоминальнаяСтоимость", 
																ВидПодарочныхСертификатов, Валюта, НоминальнаяСтоимость));
																
			ТекстВопроса = НСтр("ru = 'Табличная часть содержит строки. При изменении вида подарочных сертификатов они будут удалены. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Иначе
			Объект.ВидПодарочныхСертификатов = ВыбранноеЗначение;
			
			ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов();
			СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();    
			ЗаполнитьСписокДоступныхСтатусов();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ПодарочныеСертификаты.Очистить();
		Объект.ОстатокСуммы = Объект.ПодарочныеСертификаты.Итог("ОстатокСуммы");
		
		ЗаполнитьТекущиеЗначенияРеквизитовВидаПодарочныхСертификатов();
		
		Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
			СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();    
			ЗаполнитьСписокДоступныхСтатусов();
		КонецЕсли;
	Иначе     
		Объект.ВидПодарочныхСертификатов = ДополнительныеПараметры.СтарыйВидПодарочныхСертификатов;
		НоминальнаяСтоимость = ДополнительныеПараметры.СтараяНоминальнаяСтоимость;
		Валюта = ДополнительныеПараметры.СтараяВалюта;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СпособВводаПодарочногоСертификатаПриИзмененииНаСервере()
	ШаблонНомера = "";
	
	Если ЗначениеЗаполнено(Объект.ВидПодарочныхСертификатов) Тогда
		ВыбиратьСуществующие = СпособВводаПодарочногоСертификата = "Выбором существующего";
		
		Если ВыбиратьСуществующие Тогда
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.ПодарочныеСертификаты");
			
			ПустойПодарочныйСертификат = Справочники.ПодарочныеСертификаты.ПустаяСсылка();
			
			Для Каждого Строка Из Объект.ПодарочныеСертификаты Цикл
				Если Строка.НомерПодарочногоСертификатаНеВведен Тогда
					Строка.ПодарочныйСертификат = ПустойПодарочныйСертификат;
				КонецЕсли;
			КонецЦикла;
		Иначе
			ШаблонНомера = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВидПодарочныхСертификатов, "ШаблонНомера");
			ДлинаНомера = СтрДлина(СокрЛП(ШаблонНомера));		
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.ОграничениеТипа = Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(ДлинаНомера));
			Элементы.ПодарочныеСертификатыПодарочныйСертификат.Маска = ШаблонНомера;
			
			Для Каждого Строка Из Объект.ПодарочныеСертификаты Цикл
				Если НЕ ЗначениеЗаполнено(Строка.ПодарочныйСертификат) ИЛИ Строка.НомерПодарочногоСертификатаНеВведен Тогда
					Строка.ПодарочныйСертификат = ШаблонНомера;
					Строка.НомерПодарочногоСертификатаНеВведен = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Элементы.ПодарочныеСертификатыПодарочныйСертификат.КнопкаВыбора = ВыбиратьСуществующие;
		Элементы.ПодарочныеСертификатыПодбор.Видимость = ВыбиратьСуществующие;
	Иначе
		Элементы.ПодарочныеСертификатыПодбор.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособВводаПодарочногоСертификатаПриИзменении(Элемент)
	СпособВводаПодарочногоСертификатаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные;
	
	Если ТипЗнч(ТекущиеДанные.ПодарочныйСертификат) = Тип("Строка") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.НомерПодарочногоСертификатаНеВведен = Ложь;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПодарочныйСертификат) Тогда
		Если ПодарочныеСертификатыСервер.ПолучитьВидПодарочногоСертификата(ТекущиеДанные.ПодарочныйСертификат) <> Объект.ВидПодарочныхСертификатов Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Выбранный подарочный сертификат не соответствует виду, указанному в шапке документа!'"));
			
			ТекущиеДанные.ПодарочныйСертификат = Неопределено;
			ТекущиеДанные.Статус = Неопределено;
			ТекущиеДанные.НоминальнаяСтоимость = 0;
			ТекущиеДанные.ОстатокСуммы = 0;
			ТекущиеДанные.Валюта = Неопределено;
			ТекущиеДанные.ДействуетДо = Дата(1,1,1);
			
			Возврат;
		КонецЕсли;
		
		ТекущиеДанные.НоминальнаяСтоимость = НоминальнаяСтоимость;
		ТекущиеДанные.Валюта = Валюта;
	Иначе
		ТекущиеДанные.Статус = Неопределено;
		ТекущиеДанные.НоминальнаяСтоимость = 0;
		ТекущиеДанные.ОстатокСуммы = 0;
		ТекущиеДанные.Валюта = Неопределено;
		ТекущиеДанные.ДействуетДо = Дата(1,1,1);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные;
	
	Если СпособВводаПодарочногоСертификата = "Строкой (по номеру)" И НЕ ЗначениеЗаполнено(Текст) Тогда
		ПеревестиПодарочныйСертификатВНачалоВводаНомера(ТекущиеДанные);
		ТекущиеДанные.НоминальнаяСтоимость = 0;
		ТекущиеДанные.Валюта = Неопределено;
	Иначе
		ТекущиеДанные.НомерПодарочногоСертификатаНеВведен = Ложь;
		ТекущиеДанные.НоминальнаяСтоимость = НоминальнаяСтоимость;
		ТекущиеДанные.Валюта = Валюта;
	КонецЕсли;
	
	ПодарочныеСертификатыПриИзменении(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыСтатусПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные; 
	Если ТекущиеДанные.Статус = СтатусАктивирован Тогда
		ТекущиеДанные.ОстатокСуммы = НоминальнаяСтоимость;
	Иначе
		ТекущиеДанные.ОстатокСуммы = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПриИзменении(Элемент)
	Объект.ОстатокСуммы = Объект.ПодарочныеСертификаты.Итог("ОстатокСуммы");
	ЗаполнитьИтоговыеСуммыНоминаловИНеиспользованныхОстатков(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьПодборПодарочныхСертификатов", ПодарочныеСертификатыКлиент, Новый Структура("Форма", ЭтотОбъект)); 
	ВыбранныеПодарочныеСертификаты = ПодарочныеСертификатыКлиент.ПолучитьПодарочныеСертификатыДокумента(Объект.ПодарочныеСертификаты);
	ОткрытьФорму("Справочник.ПодарочныеСертификаты.Форма.ФормаВыбора", Новый Структура("МножественныйВыбор, ВидПодарочныхСертификатов, ВыбранныеПодарочныеСертификаты", Истина, Объект.ВидПодарочныхСертификатов, ВыбранныеПодарочныеСертификаты), , ,  , , ОписаниеОповещения);
КонецПроцедуры
