
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	ПодарочныеСертификатыСервер.ПроверитьНаличиеДублейПодарочныхСертификатовВДокументе(ЭтотОбъект, ПодарочныеСертификаты, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтатусВозвращен = Перечисления.СтатусыПодарочныхСертификатов.Возвращен;
	
	Движения.ИсторияСтатусовПодарочныхСертификатов.Записывать = Истина;
	Движения.ПодарочныеСертификаты.Записывать = Истина;
	
	Движения.Записать();	//очистка существующих движений при перепроведении
	
	//Снова устанавливаем признаки у наборов записей, так как выше сбросились
	Движения.ИсторияСтатусовПодарочныхСертификатов.Записывать = Истина;
	Движения.ПодарочныеСертификаты.Записывать = Истина;
	
	БлокировкаДанных = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ПодарочныеСертификаты");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ПодарочныеСертификаты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ПодарочныйСертификат", "ПодарочныйСертификат");
	
	БлокировкаДанных.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВозвратПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ВозвратПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат.Владелец.Возвратный КАК Возвратный,
		|	ВозвратПодарочныхСертификатовПодарочныеСертификаты.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификаты
		|ИЗ
		|	Документ.ВозвратПодарочныхСертификатов.ПодарочныеСертификаты КАК ВозвратПодарочныхСертификатовПодарочныеСертификаты
		|ГДЕ
		|	ВозвратПодарочныхСертификатовПодарочныеСертификаты.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус КАК Статус
		|ПОМЕСТИТЬ ВТ_СтатусыПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты)) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК НеиспользованныйОстатокСтоимости
		|ПОМЕСТИТЬ ВТ_НеиспользованныеОстаткиСтоимостиСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты)) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
		|	ПодарочныеСертификаты.Возвратный КАК Возвратный,
		|	ЕСТЬNULL(ВТ_СтатусыПодарочныхСертификатов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован)) КАК СертификатАктивирован,
		|	ЕСТЬNULL(ВТ_НеиспользованныеОстаткиСтоимостиСертификатов.НеиспользованныйОстатокСтоимости, 0) КАК НеиспользованныйОстатокСтоимости
		|ИЗ
		|	ВТ_ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыПодарочныхСертификатов КАК ВТ_СтатусыПодарочныхСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ВТ_СтатусыПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НеиспользованныеОстаткиСтоимостиСертификатов КАК ВТ_НеиспользованныеОстаткиСтоимостиСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ВТ_НеиспользованныеОстаткиСтоимостиСертификатов.ПодарочныйСертификат
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодарочныеСертификаты.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НЕ ВыборкаДетальныеЗаписи.Возвратный Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат не является возвратным!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если НЕ ВыборкаДетальныеЗаписи.СертификатАктивирован Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат не был активирован ранее (или уже полностью использован)!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.НеиспользованныйОстатокСтоимости = 0 Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 номинальная стоимость подарочного сертификата полностью погашена!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ИсторияСтатусовПодарочныхСертификатов.Добавить();
		Движение.Период = Дата;
		Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
		Движение.Статус = СтатусВозвращен;
		
		Движение = Движения.ПодарочныеСертификаты.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
		Движение.Сумма = ВыборкаДетальныеЗаписи.НеиспользованныйОстатокСтоимости;
	КонецЦикла;
КонецПроцедуры
