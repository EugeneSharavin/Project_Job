
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьНеиспользованныйОстатокСтоимости();
	ИтогоСтоимость = ПолучитьИтоговуюСтоимостьПоВалютам();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьНеиспользованныйОстатокСтоимости();
	ИтогоСтоимость = ПолучитьИтоговуюСтоимостьПоВалютам();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьНеиспользованныйОстатокСтоимости();
	ИтогоСтоимость = ПолучитьИтоговуюСтоимостьПоВалютам();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНеиспользованныйОстатокСтоимости()
	МассивСертификатов = Объект.ПодарочныеСертификаты.Выгрузить(, "ПодарочныйСертификат").ВыгрузитьКолонку("ПодарочныйСертификат");

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.Ссылка КАК ПодарочныйСертификат,
		|	ЕСТЬNULL(ПодарочныеСертификатыОстатки.СуммаОстаток, 0) КАК НеиспользованныйОстатокСтоимости
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПодарочныеСертификаты.Остатки(&Дата, ) КАК ПодарочныеСертификатыОстатки
		|		ПО (ПодарочныеСертификатыОстатки.ПодарочныйСертификат = ПодарочныеСертификаты.Ссылка)
		|ГДЕ
		|	ПодарочныеСертификаты.Ссылка В(&МассивСертификатов)";
	
	Запрос.УстановитьПараметр("Дата", ?(Объект.Ссылка.Пустая(), КонецДня(Объект.Дата), Объект.Дата));
	Запрос.УстановитьПараметр("МассивСертификатов", МассивСертификатов);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();                 
	
	СтруктураПоиска = Новый Структура("ПодарочныйСертификат");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаДетальныеЗаписи);
		Строки = Объект.ПодарочныеСертификаты.НайтиСтроки(СтруктураПоиска);
		Строки[0].НеиспользованныйОстатокСтоимости = ВыборкаДетальныеЗаписи.НеиспользованныйОстатокСтоимости;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ПодарочныеСертификаты.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ПодарочныйСертификат) Тогда
        ТекущиеДанные.НеиспользованныйОстатокСтоимости = ПодарочныеСертификатыСервер.ПолучитьОстатокСтоимостиПоСертификату(ТекущиеДанные.ПодарочныйСертификат, ?(Объект.Ссылка.Пустая(), КонецДня(Объект.Дата), Объект.Дата));
	Иначе
		ТекущиеДанные.НеиспользованныйОстатокСтоимости = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПодарочныйСертификатНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.ПодарочныеСертификаты.ФормаВыбора", Новый Структура("ТолькоАктивированные, ТолькоВозвратные, Дата", Истина, Истина, ?(Объект.Ссылка.Пустая(), КонецДня(Объект.Дата), Объект.Дата)), Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ПодарочныеСертификатыПриИзменении(Элемент)
	ИтогоСтоимость = ПолучитьИтоговуюСтоимостьПоВалютам();
КонецПроцедуры

&НаСервере
Функция ПолучитьИтоговуюСтоимостьПоВалютам()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.ПодарочныйСертификат.Владелец.Валюта КАК Валюта,
		|	СУММА(ПодарочныеСертификаты.Сумма) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|ГДЕ
		|	ПодарочныеСертификаты.Регистратор = &Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ПодарочныеСертификаты.ПодарочныйСертификат.Владелец.Валюта";
	
	Запрос.УстановитьПараметр("Регистратор", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Результат = "";

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Результат = Результат + ?(ЗначениеЗаполнено(Результат), Символы.ПС, "") + СтрШаблон("%1 %2", Формат(ВыборкаДетальныеЗаписи.Сумма, "ЧДЦ=2; ЧРГ=,; ЧН=0,00"), ВыборкаДетальныеЗаписи.Валюта);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
		|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК НеиспользованныйОстатокСтоимости
		|ПОМЕСТИТЬ ВТ_ОстаткиСтоимостиПодарочныхСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(&Дата, ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ЕСТЬNULL(ВТ_ОстаткиСтоимостиПодарочныхСертификатов.НеиспользованныйОстатокСтоимости, 0) КАК НеиспользованныйОстатокСтоимости
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(&Дата, ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
		|		ПО ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиСтоимостиПодарочныхСертификатов КАК ВТ_ОстаткиСтоимостиПодарочныхСертификатов
		|		ПО ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат = ВТ_ОстаткиСтоимостиПодарочныхСертификатов.ПодарочныйСертификат
		|ГДЕ
		|	(ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен))
		|			ИЛИ ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован)
		|				И ЕСТЬNULL(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)) < &Дата)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат.Код";
	
	Запрос.УстановитьПараметр("ВидПодарочныхСертификатов", Объект.ВидПодарочныхСертификатов);
	Запрос.УстановитьПараметр("Дата", ?(Объект.Ссылка.Пустая(), КонецДня(Объект.Дата), Объект.Дата));
	
	РезультатЗапроса = Запрос.Выполнить();
	Объект.ПодарочныеСертификаты.Загрузить(РезультатЗапроса.Выгрузить());	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОПерезаполнении", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Табличная часть содержит строки. При заполнении они будут удалены. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОПерезаполнении(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидПодарочныхСертификатовОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	Если ВыбранноеЗначение <> Объект.ВидПодарочныхСертификатов И Объект.ПодарочныеСертификаты.Количество() > 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти", ЭтотОбъект, 
										Новый Структура("СтарыйВидПодарочныхСертификатов, СтараяВалюта, СтараяНоминальнаяСтоимость", 
															Объект.ВидПодарочныхСертификатов, Валюта, НоминальнаяСтоимость));
		ТекстВопроса = НСтр("ru = 'Табличная часть содержит строки. При изменении вида подарочных сертификатов они будут удалены. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбОчисткеТабличнойЧасти(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Объект.ПодарочныеСертификаты.Очистить();
	Иначе     
		Объект.ВидПодарочныхСертификатов = ДополнительныеПараметры.СтарыйВидПодарочныхСертификатов;
		НоминальнаяСтоимость = ДополнительныеПараметры.НоминальнаяСтоимость;
		Валюта = ДополнительныеПараметры.СтараяВалюта;
	КонецЕсли;
КонецПроцедуры

