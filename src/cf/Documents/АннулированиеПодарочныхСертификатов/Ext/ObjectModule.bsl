
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Ответственный = Пользователи.ТекущийПользователь();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(ВидПодарочныхСертификатов) Тогда
		ПодарочныеСертификатыСервер.УдалитьСтрокиДокументаСНесуществующимиПодарочнымиСертификатами(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	ПодарочныеСертификатыСервер.ПроверитьНаличиеДублейПодарочныхСертификатовВДокументе(ЭтотОбъект, ПодарочныеСертификаты, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	СтатусАннулирован = Перечисления.СтатусыПодарочныхСертификатов.Аннулирован;
	
	ПодарочныеСертификатыСервер.УдалитьДвиженияДокументаПриПерепроведенииИУстановитьПризнакиЗаписиВРегистры(Движения);
	
	БлокировкаДанных = Новый БлокировкаДанных;
	
	ЭлементБлокировки = БлокировкаДанных.Добавить("РегистрНакопления.ПодарочныеСертификаты");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = ПодарочныеСертификаты;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ПодарочныйСертификат", "ПодарочныйСертификат");
	
	БлокировкаДанных.Заблокировать();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	АннулированиеПодарочныхСертификатовПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	АннулированиеПодарочныхСертификатовПодарочныеСертификаты.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ПодарочныеСертификаты
		|ИЗ
		|	Документ.АннулированиеПодарочныхСертификатов.ПодарочныеСертификаты КАК АннулированиеПодарочныхСертификатовПодарочныеСертификаты
		|ГДЕ
		|	АннулированиеПодарочныхСертификатовПодарочныеСертификаты.Ссылка = &Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус КАК Статус
		|ПОМЕСТИТЬ ВТ_СтатусыПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты)) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
		|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат В
		|			(ВЫБРАТЬ
		|				ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|			ИЗ
		|				ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты)
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК НеиспользованныйОстатокСтоимости
		|ПОМЕСТИТЬ ВТ_НеиспользованныеОстаткиСтоимостиСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(
		|			&Дата,
		|			ПодарочныйСертификат В
		|				(ВЫБРАТЬ
		|					ВТ_ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат
		|				ИЗ
		|					ВТ_ПодарочныеСертификаты КАК ВТ_ПодарочныеСертификаты)) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификаты.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификаты.НомерСтроки КАК НомерСтроки,
		|	ЕСТЬNULL(ВТ_СтатусыПодарочныхСертификатов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка)) В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован)) КАК СертификатАктивирован,
		|	ЕСТЬNULL(ВТ_СтатусыПодарочныхСертификатов.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Аннулирован) КАК СертификатАннулирован,
		|	КОНЕЦПЕРИОДА(ЕСТЬNULL(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДАТАВРЕМЯ(1, 1, 1)), ДЕНЬ) КАК ДействуетДо,
		|	ЕСТЬNULL(ВТ_НеиспользованныеОстаткиСтоимостиСертификатов.НеиспользованныйОстатокСтоимости, 0) КАК НеиспользованныйОстатокСтоимости
		|ИЗ
		|	ВТ_ПодарочныеСертификаты КАК ПодарочныеСертификаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтатусыПодарочныхСертификатов КАК ВТ_СтатусыПодарочныхСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ВТ_СтатусыПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_НеиспользованныеОстаткиСтоимостиСертификатов КАК ВТ_НеиспользованныеОстаткиСтоимостиСертификатов
		|		ПО ПодарочныеСертификаты.ПодарочныйСертификат = ВТ_НеиспользованныеОстаткиСтоимостиСертификатов.ПодарочныйСертификат
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПодарочныеСертификаты.НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", ?(Режим = РежимПроведенияДокумента.Оперативный, Неопределено, Новый Граница(МоментВремени(), ВидГраницы.Исключая)));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.СертификатАктивирован И ВыборкаДетальныеЗаписи.ДействуетДо >= Дата Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат еще действует и срок действия не истек!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если ВыборкаДетальныеЗаписи.СертификатАннулирован Тогда
			ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'В строке %1 подарочный сертификат уже аннулирован!'"), ВыборкаДетальныеЗаписи.НомерСтроки), ЭтотОбъект, "ПодарочныеСертификаты[" + Формат(ВыборкаДетальныеЗаписи.НомерСтроки - 1, "ЧГ=") + "].ПодарочныйСертификат", , Отказ);
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Движение = Движения.ИсторияСтатусовПодарочныхСертификатов.Добавить();
		Движение.Период = Дата;
		Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
		Движение.Статус = СтатусАннулирован;
		Движение.Ответственный = Ответственный;
		
		Если ВыборкаДетальныеЗаписи.НеиспользованныйОстатокСтоимости > 0 Тогда
			Движение = Движения.ПодарочныеСертификаты.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.ПодарочныйСертификат = ВыборкаДетальныеЗаписи.ПодарочныйСертификат;
			Движение.Сумма = ВыборкаДетальныеЗаписи.НеиспользованныйОстатокСтоимости;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ЗаполнитьПодарочныеСертификаты() Экспорт
	//В текущей версии технологической платформы номер строки имеет длину (разрядность) 5 знаков,
	//но в перспективных версиях анонсировали увеличение разрядности
	РазрядностьНомераСтрокиТабличнойЧасти = 
		Метаданные.Документы.АннулированиеПодарочныхСертификатов.ТабличныеЧасти.ПодарочныеСертификаты.СтандартныеРеквизиты.НомерСтроки.Тип.КвалификаторыЧисла.Разрядность;

	МаксимальноеКоличествоСтрокВТабличнойЧасти = Pow(10, РазрядностьНомераСтрокиТабличнойЧасти) - 1;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	МАКСИМУМ(ИсторияСтатусовПодарочныхСертификатов.ДействуетДо) КАК ДействуетДо
		|ПОМЕСТИТЬ ВТ_СрокиДействияПодарочныхСертификатов
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов
		|
		|СГРУППИРОВАТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПодарочныеСертификатыОстатки.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ПодарочныеСертификатыОстатки.СуммаОстаток КАК НеиспользованныйОстатокСтоимости
		|ПОМЕСТИТЬ ВТ_ОстаткиСтоимостиПодарочныхСертификатов
		|ИЗ
		|	РегистрНакопления.ПодарочныеСертификаты.Остатки(&ДатаОстатков, ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов) КАК ПодарочныеСертификатыОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПодарочныйСертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ #КоличествоЗаписей#
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат КАК ПодарочныйСертификат,
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус КАК Статус,                                   
		|   ЕСТЬNULL(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДАТАВРЕМЯ(1,1,1)) КАК ДействуетДо,
		|	ЕСТЬNULL(ВТ_ОстаткиСтоимостиПодарочныхСертификатов.НеиспользованныйОстатокСтоимости, 0) КАК ОстатокСуммы
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов.СрезПоследних(&Момент, ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов) КАК ИсторияСтатусовПодарочныхСертификатовСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СрокиДействияПодарочныхСертификатов КАК ВТ_СрокиДействияПодарочныхСертификатов
		|		ПО ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат = ВТ_СрокиДействияПодарочныхСертификатов.ПодарочныйСертификат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиСтоимостиПодарочныхСертификатов КАК ВТ_ОстаткиСтоимостиПодарочныхСертификатов
		|		ПО ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат = ВТ_ОстаткиСтоимостиПодарочныхСертификатов.ПодарочныйСертификат
		|ГДЕ
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ПолностьюИспользован), 
		|																 ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Возвращен), 
		|																 ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Выпущен))
		|
		|			ИЛИ ИсторияСтатусовПодарочныхСертификатовСрезПоследних.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.Активирован), 
		|																			 ЗНАЧЕНИЕ(Перечисление.СтатусыПодарочныхСертификатов.ЧастичноИспользован))
		|				И КОНЕЦПЕРИОДА(ВТ_СрокиДействияПодарочныхСертификатов.ДействуетДо, ДЕНЬ) < &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИсторияСтатусовПодарочныхСертификатовСрезПоследних.ПодарочныйСертификат.Код";
	
	Если ЗначениеЗаполнено(ВидПодарочныхСертификатов) Тогда
		Запрос.УстановитьПараметр("ВидПодарочныхСертификатов", ВидПодарочныхСертификатов);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ИсторияСтатусовПодарочныхСертификатов.ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов", "ИСТИНА");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов", "");
	КонецЕсли;
	
	МоментПолученияСведений = ПодарочныеСертификатыСервер.ПолучитьМоментПолученияСведений(Ссылка, Дата);
	Запрос.УстановитьПараметр("Момент", МоментПолученияСведений);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ДатаОстатков", ?(ТипЗнч(МоментПолученияСведений) = Тип("Дата"), МоментПолученияСведений + 1, МоментПолученияСведений));
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#КоличествоЗаписей#", Формат(МаксимальноеКоличествоСтрокВТабличнойЧасти + 1, "ЧГ="));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаПодарочныхСертификатов = РезультатЗапроса.Выгрузить();
	
	Если ТаблицаПодарочныхСертификатов.Количество() = МаксимальноеКоличествоСтрокВТабличнойЧасти + 1 Тогда
		ОбщегоНазначения.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Количество выбранных подарочных сертификатов для аннулирования превышает максимально возможное количество строк в одном документе (%1)! В документ будет помещено только %1 строк.'"), МаксимальноеКоличествоСтрокВТабличнойЧасти));
		ТаблицаПодарочныхСертификатов.Удалить(МаксимальноеКоличествоСтрокВТабличнойЧасти);
	КонецЕсли;
	
	ПодарочныеСертификаты.Загрузить(ТаблицаПодарочныхСертификатов);
	
	Возврат ТаблицаПодарочныхСертификатов;
КонецФункции

#КонецОбласти

#КонецЕсли