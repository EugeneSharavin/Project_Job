
&НаКлиенте
Перем СтарыйТипОбъекта;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)                     
	ИсключаемыеТипы = "Справочник.RMQ_ВиртуальныеХосты, Справочник.RMQ_ТочкиОбмена, Справочник.RMQ_Очереди";
	
	Для Каждого МетаСпр Из Метаданные.Справочники Цикл
		Если СтрНайти(ИсключаемыеТипы, МетаСпр.ПолноеИмя()) = 0 Тогда
			Элементы.ТипОбъекта.СписокВыбора.Добавить(Тип("СправочникСсылка." + МетаСпр.Имя), МетаСпр.Представление(), , БиблиотекаКартинок.Справочник);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого МетаДок Из Метаданные.Документы Цикл
		Элементы.ТипОбъекта.СписокВыбора.Добавить(Тип("ДокументСсылка." + МетаДок.Имя), МетаДок.Представление(), , БиблиотекаКартинок.Документ);
	КонецЦикла;
	
	Для Каждого МетаПВХ Из Метаданные.ПланыВидовХарактеристик Цикл
		Элементы.ТипОбъекта.СписокВыбора.Добавить(Тип("ПланВидовХарактеристикСсылка." + МетаПВХ.Имя), МетаПВХ.Представление(), , БиблиотекаКартинок.ПланВидовХарактеристик);
	КонецЦикла;
	
	Если Параметры.Свойство("ЗначениеКопирования") И Параметры.ЗначениеКопирования.Объект <> Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Запись, Параметры.ЗначениеКопирования);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.Период) Тогда
		Запись.Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Запись.Объект);
	
	//Если запись существующая или введена копированием (но в любом случае, не с нуля), то измерение "Объект" в записи будет отличаться от Неопределено
	Если Запись.Объект <> Неопределено Тогда
		НастройкиКомпоновщика = РеквизитФормыВЗначение("Запись").НастройкаОтбораОбъектов.Получить();
		
		Если ТипЗнч(НастройкиКомпоновщика) = Тип("НастройкиКомпоновкиДанных") Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновщика);
		ИначеЕсли Параметры.Свойство("АдресНастроекОтбора") И ЗначениеЗаполнено(Параметры.АдресНастроекОтбора) Тогда
			НастройкиКомпоновщика = ПолучитьИзВременногоХранилища(Параметры.АдресНастроекОтбора);
			
			Если ТипЗнч(НастройкиКомпоновщика) = Тип("НастройкиКомпоновкиДанных") Тогда
				КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиКомпоновщика);
			КонецЕсли;
		КонецЕсли;
		
		ИнициализироватьКомпоновщикНастроек();
	
		НастройкаОтбораОбъектовУказаны = НастройкиКомпоновщика <> Неопределено;
		
		Если ЗначениеЗаполнено(Запись.Объект) Тогда
			НастройкаОтбораОбъектов = "Выгружать указанный объект";
		ИначеЕсли НастройкаОтбораОбъектовУказаны Тогда
			НастройкаОтбораОбъектов = "Выгружать объекты по условию";
		Иначе
			НастройкаОтбораОбъектов = "Выгружать все объекты";
		КонецЕсли;
	КонецЕсли;
	
	ПриИзмененииТипаОбъектаИНастройкиОтбораОбъектов();
	
	ТипТочкиОбменаTopic = Перечисления.RMQ_ТипыТочекОбмена.Topic;
	ТочкаОбменаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКомпоновщикНастроек()
	КомпоновщикНастроек.Инициализировать(Неопределено);
	
	СКД = Новый СхемаКомпоновкиДанных;
	
    ИсточникДанных = СКД.ИсточникиДанных.Добавить();
    ИсточникДанных.Имя = "ИсточникДанных1";
    ИсточникДанных.ТипИсточникаДанных = "Local";
    
    НаборДанныхЗапрос = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
    НаборДанныхЗапрос.Имя = "НаборДанных1";
    НаборДанныхЗапрос.ИсточникДанных = ИсточникДанных.Имя;
	
	НаборДанныхЗапрос.АвтоЗаполнениеДоступныхПолей = Истина;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Таблица.*
	               |ИЗ
	               |	" + Метаданные.НайтиПоТипу(ТипОбъекта).ПолноеИмя() + " КАК Таблица";
	
	НаборДанныхЗапрос.Запрос = ТекстЗапроса;
	
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных);
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтарыйТипОбъекта = ТипОбъекта;
	
	Если НастройкаОтбораОбъектов = "Выгружать указанный объект" И ЗначениеЗаполнено(Запись.Объект) Тогда
		СтандартнаяОбработка = Ложь;
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбИзмененииТипаОбъекта", ЭтотОбъект, Новый Структура("СтарыйТипОбъекта", СтарыйТипОбъекта));
		ТекстВопроса = НСтр("ru = 'Указан конкретный объект для выгрузки! При изменении типа объекта он будет очищен. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	ИначеЕсли НастройкаОтбораОбъектов = "Выгружать объекты по условию" И КомпоновщикНастроек.Настройки.Отбор.Элементы.Количество() > 0 Тогда
		СтандартнаяОбработка = Ложь;
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбИзмененииТипаОбъекта", ЭтотОбъект, Новый Структура("СтарыйТипОбъекта", СтарыйТипОбъекта));
		ТекстВопроса = НСтр("ru = 'Указана настройка отбора объектов для выгрузки! При изменении типа объекта она будет очищена. Продолжить?'");
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);                                   
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПустуюСсылкуПоТипуОбъекта(ТипОбъекта)
	Возврат ПредопределенноеЗначение(Метаданные.НайтиПоТипу(ТипОбъекта).ПолноеИмя() + ".ПустаяСсылка");
КонецФункции

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбИзмененииТипаОбъекта(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		ТипОбъекта = СтарыйТипОбъекта;
	Иначе
		Запись.Объект = ПолучитьПустуюСсылкуПоТипуОбъекта(ТипОбъекта);
		КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
		
		Попытка
			Wsh = Новый COMОбъект("Wscript.shell");
			Wsh.SendKeys("{F4}");
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаПриИзменении(Элемент)
	Если НастройкаОтбораОбъектов = "" Тогда
		НастройкаОтбораОбъектов = "Выгружать все объекты";
	КонецЕсли;
	
	Запись.Объект = ПолучитьПустуюСсылкуПоТипуОбъекта(ТипОбъекта);
	ИнициализироватьКомпоновщикНастроек();
	ПриИзмененииТипаОбъектаИНастройкиОтбораОбъектов();
КонецПроцедуры

&НаКлиенте
Процедура ТипОбъектаОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ТочкаОбменаПриИзменении(Элемент)
	ТочкаОбменаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ТочкаОбменаПриИзмененииНаСервере()
	Элементы.КлючМаршрутизации.Видимость = RMQ_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ТочкаОбмена, "ТипТочкиОбмена").ТипТочкиОбмена = ТипТочкиОбменаTopic;
	
	Если НЕ Элементы.КлючМаршрутизации.Видимость И ЗначениеЗаполнено(Запись.КлючМаршрутизации) Тогда
		Запись.КлючМаршрутизации = "";
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТипаОбъектаИНастройкиОтбораОбъектов()
	Элементы.НастройкаОтбораОбъектов.Видимость = Ложь;
	Элементы.Объект.Видимость = Ложь;
	Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Ложь;

	ТипОбъектаУказан = ТипОбъекта <> Тип("Неопределено");
	
	Если НЕ ТипОбъектаУказан Тогда		
		Возврат;
	КонецЕсли;
	
	Элементы.НастройкаОтбораОбъектов.Видимость = Истина;
		
	Если НастройкаОтбораОбъектов = "Выгружать все объекты" Тогда
		Элементы.Объект.Видимость = Ложь;
		Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Ложь;
	ИначеЕсли НастройкаОтбораОбъектов = "Выгружать указанный объект"  Тогда
		Элементы.Объект.Видимость = Истина;
		Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Ложь;
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(ТипОбъекта);
		Элементы.Объект.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	ИначеЕсли НастройкаОтбораОбъектов = "Выгружать объекты по условию" Тогда
		Элементы.Объект.Видимость = Ложь;
		Элементы.КомпоновщикНастроекНастройкиОтбор.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НастройкаОтбораОбъектовПриИзменении(Элемент)
	ПриИзмененииТипаОбъектаИНастройкиОтбораОбъектов();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ТипОбъекта = Тип("Неопределено") Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан тип выгружаемых объектов!'"), , "ТипОбъекта", "", Отказ);
		Возврат;
	КонецЕсли;
			
	Если НастройкаОтбораОбъектов = "Выгружать все объекты" Тогда
		ТекущийОбъект.Объект = ПолучитьПустуюСсылкуПоТипуОбъекта(ТипОбъекта);
		ТекущийОбъект.НастройкаОтбораОбъектов = Новый ХранилищеЗначения(Неопределено);
		КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	ИначеЕсли НастройкаОтбораОбъектов = "Выгружать указанный объект" Тогда
		Если НЕ ЗначениеЗаполнено(Запись.Объект) Тогда
			ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан выгружаемый объект!'"), , "Объект", "Запись", Отказ);
			Возврат;
		КонецЕсли;
		ТекущийОбъект.НастройкаОтбораОбъектов = Новый ХранилищеЗначения(Неопределено);
		КомпоновщикНастроек.Настройки.Отбор.Элементы.Очистить();
	ИначеЕсли НастройкаОтбораОбъектов = "Выгружать объекты по условию" Тогда
		ТекущийОбъект.Объект = ПолучитьПустуюСсылкуПоТипуОбъекта(ТипОбъекта);
		ТекущийОбъект.НастройкаОтбораОбъектов = Новый ХранилищеЗначения(КомпоновщикНастроек.ПолучитьНастройки());
	КонецЕсли;
	
	Если RMQ_ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Запись.ТочкаОбмена, "ТипТочкиОбмена").ТипТочкиОбмена = ТипТочкиОбменаTopic И НЕ ЗначениеЗаполнено(Запись.КлючМаршрутизации) Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не указан ключ маршрутизации для точки обмена с типом ""Topic""!'"), , "КлючМаршрутизации", "Запись", Отказ);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ЗаписанаТочкаОбменаДляПубликацииДанных");
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикНастроекНастройкиОтборПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры
