
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ВариантОтображения = ХранилищеОбщихНастроек.Загрузить("RMQ_ТочкиОбменаДляПубликацииДанных", "ВариантОтображения");
	
	Если НЕ ЗначениеЗаполнено(ВариантОтображения) Тогда
		ВариантОтображения = "Все";
	КонецЕсли;
	
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	ДеревоОбъектов.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	RMQ_ТочкиОбменаДляПубликацииДанных.Действует КАК Действует,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.Период КАК Период,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.Объект КАК Объект,
		|	ТИПЗНАЧЕНИЯ(RMQ_ТочкиОбменаДляПубликацииДанных.Объект) КАК ТипОбъекта,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.ТочкаОбмена КАК ТочкаОбмена,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.ТочкаОбмена.ТипТочкиОбмена КАК ТочкаОбменаТипТочкиОбмена,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.КлючМаршрутизации КАК КлючМаршрутизации,
		|	RMQ_ТочкиОбменаДляПубликацииДанных.НастройкаОтбораОбъектов КАК НастройкаОтбораОбъектов
		|ИЗ
		|	РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных КАК RMQ_ТочкиОбменаДляПубликацииДанных
		|ИТОГИ
		|	ВЫБОР
		|		КОГДА МАКСИМУМ(Действует) = ЛОЖЬ
		|			ТОГДА 0
		|		КОГДА МИНИМУМ(Действует) = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК Действует
		|ПО
		|	ТипОбъекта";
	
	Если ВариантОтображения = "Только актуальные" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных", "РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных.СрезПоследних");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "КАК RMQ_ТочкиОбменаДляПубликацииДанных", "КАК RMQ_ТочкиОбменаДляПубликацииДанных ГДЕ RMQ_ТочкиОбменаДляПубликацииДанных.Действует");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаТипОбъекта = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТипОбъекта.Следующий() Цикл
		НоваяСтрока = ДеревоОбъектов.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаТипОбъекта);
		НоваяСтрока.ПредставлениеОбъектаТипаОбъектов = ?(ВыборкаТипОбъекта.ТипОбъекта = Тип("Неопределено"), "", Метаданные.НайтиПоТипу(ВыборкаТипОбъекта.ТипОбъекта).Представление());
	
		ВыборкаДетальныеЗаписи = ВыборкаТипОбъекта.Выбрать();
	
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НоваяПодчСтрока = НоваяСтрока.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяПодчСтрока, ВыборкаДетальныеЗаписи);
			
			Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Объект) Тогда
				НоваяПодчСтрока.ПредставлениеОбъектаТипаОбъектов = ВыборкаДетальныеЗаписи.Объект;
			ИначеЕсли ВыборкаДетальныеЗаписи.НастройкаОтбораОбъектов.Получить() <> Неопределено Тогда
				НоваяПодчСтрока.ПредставлениеОбъектаТипаОбъектов = "отобранные по условию";
			Иначе
				НоваяПодчСтрока.ПредставлениеОбъектаТипаОбъектов = "все объекты";
			КонецЕсли;
			
			НоваяПодчСтрока.ПредставлениеТочкиОбмена = СтрШаблон("%1 (%2)", ВыборкаДетальныеЗаписи.ТочкаОбмена, ВыборкаДетальныеЗаписи.ТочкаОбменаТипТочкиОбмена);
			НоваяПодчСтрока.Уровень = 1;
		КонецЦикла;
	КонецЦикла;
	
	ХранилищеОбщихНастроек.Сохранить("RMQ_ТочкиОбменаДляПубликацииДанных", "ВариантОтображения", ВариантОтображения);
КонецПроцедуры

&НаКлиенте
Процедура ВариантОтображенияПриИзменении(Элемент)
	ОбновитьНаСервере();
	
	Для Каждого Строка Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоОбъектов.Развернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();               
	
	Для Каждого Строка Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
		Элементы.ДеревоОбъектов.Развернуть(Строка.ПолучитьИдентификатор());
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКлючЗаписиРегистраСведений(ЗначенияКлюча)
	Возврат РегистрыСведений.RMQ_ТочкиОбменаДляПубликацииДанных.СоздатьКлючЗаписи(ЗначенияКлюча);
КонецФункции

&НаКлиенте
Процедура ДеревоОбъектовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = ДеревоОбъектов.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если ТекущиеДанные.Уровень = 1 Тогда
		КлючЗаписи = ПолучитьКлючЗаписиРегистраСведений(Новый Структура("Период, Объект, ТочкаОбмена", ТекущиеДанные.Период, ТекущиеДанные.Объект, ТекущиеДанные.ТочкаОбмена));
		ОткрытьФорму("РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных.Форма.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписи));
	Иначе
		ТекущаяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
		
		Если Элементы.ДеревоОбъектов.Развернут(ТекущаяСтрока) Тогда
			Элементы.ДеревоОбъектов.Свернуть(ТекущаяСтрока);
		Иначе
			Элементы.ДеревоОбъектов.Развернуть(ТекущаяСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПоместитьНастройкиОтбораВоВременноеХранилище(КлючЗаписи)
	МенеджерЗаписи = РегистрыСведений.RMQ_ТочкиОбменаДляПубликацииДанных.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, КлючЗаписи);
	МенеджерЗаписи.Прочитать();
	
	НастройкаОтбораОбъектов = МенеджерЗаписи.НастройкаОтбораОбъектов.Получить();
	
	Если НастройкаОтбораОбъектов <> Неопределено Тогда
		Возврат ПоместитьВоВременноеХранилище(НастройкаОтбораОбъектов);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДеревоОбъектовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;                                                                      
	
	Если Копирование Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;
		Если ТекущиеДанные.Уровень = 1 Тогда
			КлючЗаписи = ПолучитьКлючЗаписиРегистраСведений(Новый Структура("Период, Объект, ТочкаОбмена", ТекущиеДанные.Период, ТекущиеДанные.Объект, ТекущиеДанные.ТочкаОбмена));
			
			АдресНастроекОтбора = ПоместитьНастройкиОтбораВоВременноеХранилище(КлючЗаписи);
			
			ОткрытьФорму("РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных.Форма.ФормаЗаписи", Новый Структура("ЗначениеКопирования, АдресНастроекОтбора", КлючЗаписи, АдресНастроекОтбора));
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Для копирования выделите конечную строку!'"));
		КонецЕсли;
	Иначе
		ОткрытьФорму("РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных.Форма.ФормаЗаписи");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоОбъектовПередУдалением(Элемент, Отказ)
	ВыделенныеСтроки = Элементы.ДеревоОбъектов.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		Отказ = Истина;

		ЕстьКонечныеСтроки = Ложь;
		
		Для Каждого Строка Из ВыделенныеСтроки Цикл
			ТекущиеДанные = ДеревоОбъектов.НайтиПоИдентификатору(Строка);
			ЕстьКонечныеСтроки = ЕстьКонечныеСтроки ИЛИ ТекущиеДанные.Уровень = 1;
			
			Если ЕстьКонечныеСтроки Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьКонечныеСтроки Тогда
			ПоказатьПредупреждение(, НСтр("ru = 'Не выделена ни одна конечная строка!'"));
			Возврат;
		КонецЕсли;
				
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОбУдаленииЗаписей", ЭтотОбъект, Новый Структура("ВыделенныеСтроки", ВыделенныеСтроки));
		ТекстВопроса = ?(ВыделенныеСтроки.Количество() > 1, НСтр("ru = 'Удалить выделенные записи?'"), НСтр("ru = 'Удалить выделенную запись?'"));
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОбУдаленииЗаписей(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗначенияКлючейУдаляемыхЗаписей = Новый Массив;
		
		Для Каждого Строка Из ДополнительныеПараметры.ВыделенныеСтроки Цикл
			ТекущиеДанные = ДеревоОбъектов.НайтиПоИдентификатору(Строка);
			
			Если ТекущиеДанные.Уровень = 1 Тогда
				ЗначенияКлючейУдаляемыхЗаписей.Добавить(Новый Структура("Период, Объект, ТочкаОбмена", ТекущиеДанные.Период, ТекущиеДанные.Объект, ТекущиеДанные.ТочкаОбмена));
			КонецЕсли;
		КонецЦикла;
		
		УдалитьЗаписисРегистра(ЗначенияКлючейУдаляемыхЗаписей);
		ВсегоВыделеноСтрок = ДополнительныеПараметры.ВыделенныеСтроки.Количество();
		
		
		Для Н = 1 По ВсегоВыделеноСтрок Цикл
			Строка = ДополнительныеПараметры.ВыделенныеСтроки[ВсегоВыделеноСтрок - Н];
			УдаляемаяСтрока = ДеревоОбъектов.НайтиПоИдентификатору(Строка);
			
			Если УдаляемаяСтрока.Уровень = 1 Тогда
				РодительскаяСтрока = УдаляемаяСтрока.ПолучитьРодителя();
				РодительскаяСтрока.ПолучитьЭлементы().Удалить(УдаляемаяСтрока);
				
				Если РодительскаяСтрока.ПолучитьЭлементы().Количество() = 0 Тогда
					ДеревоОбъектов.ПолучитьЭлементы().Удалить(РодительскаяСтрока);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЗаписисРегистра(ЗначенияКлючей)
	Для Каждого ЗначенияКлюча Из ЗначенияКлючей Цикл
		МенеджерЗаписи = РегистрыСведений.RMQ_ТочкиОбменаДляПубликацииДанных.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ЗначенияКлюча);
		МенеджерЗаписи.Удалить();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ЗаписанаТочкаОбменаДляПубликацииДанных" Тогда
		ОбновитьНаСервере();
	
		Для Каждого Строка Из ДеревоОбъектов.ПолучитьЭлементы() Цикл
			Элементы.ДеревоОбъектов.Развернуть(Строка.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьОбъектыВИсходящихСообщенияхОбменаНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТИПЗНАЧЕНИЯ(RMQ_ТочкиОбменаДляПубликацииДанныхСрезПоследних.Объект) КАК ТипОбъекта
		|ИЗ
		|	РегистрСведений.RMQ_ТочкиОбменаДляПубликацииДанных.СрезПоследних КАК RMQ_ТочкиОбменаДляПубликацииДанныхСрезПоследних
		|ГДЕ
		|	RMQ_ТочкиОбменаДляПубликацииДанныхСрезПоследних.Действует";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Выборка = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Метаданные.НайтиПоТипу(ВыборкаДетальныеЗаписи.ТипОбъекта).ПолноеИмя()).Выбрать();
		Пока Выборка.Следующий() Цикл
			RMQ_ОбменСообщениями.ЗарегистрироватьОбъектыВИсходящихСообщенияхОбмена(Выборка.ПолучитьОбъект());
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрироватьОбъектыВИсходящихСообщенияхОбмена(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработатьОтветНаВопросОРегистрацииОбъектовВИсходящихСообщенияхОбмена", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Зарегистрировать все объекты указанных типов в исходящих сообщениях обмена?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОтветНаВопросОРегистрацииОбъектовВИсходящихСообщенияхОбмена(РезультатВопроса, ДополнительныеПараметры) Экспорт
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗарегистрироватьОбъектыВИсходящихСообщенияхОбменаНаСервере();
	КонецЕсли;
КонецПроцедуры
