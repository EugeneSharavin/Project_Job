
#Область ПрограммныйИнтерфейс

Процедура ВыполнитьИнициализациюДанных() Экспорт
	
	//Проверяем включение функциональной опции "ИспользоватьПодарочныеСертификаты"
	ИспользоватьПодарочныеСертификаты = Константы.ИспользоватьПодарочныеСертификаты.Получить();
	
	Если НЕ ИспользоватьПодарочныеСертификаты Тогда
		Константы.ИспользоватьПодарочныеСертификаты.Установить(Истина);
	КонецЕсли;

	//Очистим все ранее созданные объекты подсистемы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИсторияСтатусовПодарочныхСертификатов.Регистратор КАК Регистратор
		|ИЗ
		|	РегистрСведений.ИсторияСтатусовПодарочныхСертификатов КАК ИсторияСтатусовПодарочныхСертификатов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	//Сначала очистим движения
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РегистраторОбъект = ВыборкаДетальныеЗаписи.Регистратор.ПолучитьОбъект();
		
		Для Каждого НаборЗаписей Из РегистраторОбъект.Движения Цикл
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЦикла;
	
	//Затем удалим сами документы
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
        |	_ДемоРеализацияТоваровОплатаПодарочнымиСертификатами.Ссылка КАК Ссылка
        |ИЗ
        |	Документ._ДемоРеализацияТоваров.ОплатаПодарочнымиСертификатами КАК _ДемоРеализацияТоваровОплатаПодарочнымиСертификатами
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВыпускПодарочныхСертификатов.Ссылка
        |ИЗ
        |	Документ.ВыпускПодарочныхСертификатов КАК ВыпускПодарочныхСертификатов
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВводОстатковПодарочныхСертификатов.Ссылка
        |ИЗ
        |	Документ.ВводОстатковПодарочныхСертификатов КАК ВводОстатковПодарочныхСертификатов
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	РеализацияПодарочныхСертификатов.Ссылка
        |ИЗ
        |	Документ.РеализацияПодарочныхСертификатов КАК РеализацияПодарочныхСертификатов
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	ВозвратПодарочныхСертификатов.Ссылка
        |ИЗ
        |	Документ.ВозвратПодарочныхСертификатов КАК ВозвратПодарочныхСертификатов
        |
        |ОБЪЕДИНИТЬ ВСЕ
        |
        |ВЫБРАТЬ
        |	АннулированиеПодарочныхСертификатов.Ссылка
        |ИЗ
        |	Документ.АннулированиеПодарочныхСертификатов КАК АннулированиеПодарочныхСертификатов";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РегистраторОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		РегистраторОбъект.Удалить();
	КонецЦикла;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодарочныеСертификаты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ПодарочныеСертификаты КАК ПодарочныеСертификаты";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПодарочныйСертификатОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПодарочныйСертификатОбъект.Удалить();
	КонецЦикла;
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыПодарочныхСертификатов.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыПодарочныхСертификатов КАК ВидыПодарочныхСертификатов";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ВидПодарочныхСертификатовОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ВидПодарочныхСертификатовОбъект.Удалить();
	КонецЦикла;
	
	//Запомним валюту "RUB" в контексте набора тестов
	ЮТест.Контекст().УстановитьЗначение("ВалютаRUB", Справочники.Валюты.НайтиПоКоду("643"));
	
КонецПроцедуры

#КонецОбласти
