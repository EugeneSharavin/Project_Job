
#Область ПрограммныйИнтерфейс

Процедура ИсполняемыеСценарии() Экспорт
    
    ЮТТесты.ДобавитьТестовыйНабор("Справочник ""Подарочные сертификаты"": Проверка автоматического создания").ВТранзакции()
		.ДобавитьТест("ПроверкаАвтоматическойГенерацииПодарочныхСертификатов")
		;

КонецПроцедуры

Процедура ПередВсемиТестами() Экспорт
	
	Общ_Инициализация.ВыполнитьИнициализациюДанных();
	
КонецПроцедуры

Процедура ПроверкаАвтоматическойГенерацииПодарочныхСертификатов(ВидПодарочныхСертификатов = Неопределено) Экспорт
	
	// Описание программного создания: https://bia-technologies.github.io/yaxunit/docs/features/test-data/data-generation/
	
	//Сначала сгенерируем необходимые виды подарочных сертификатов, если в параметре процедуры не указан конкретный вид
	Если ВидПодарочныхСертификатов = Неопределено Тогда
		Спр_ВидыПодарочныхСертификатов.ПроверкаСозданияВидовПодарочныхСертификатов();
	КонецЕсли;
	
	//Создадим экземпляр обработки по генерации подарочных сертификатов
	ОбработкаГенерацииПодарочныхСертификатов = Обработки.ГенерацияПодарочныхСертификатов.Создать();
	
	//Получим выборку сгенерированных видов подарочных сертификатов и для каждого вида автоматически сгенерируем подарочные сертификаты
	ВыборкаВидовПодарочныхСертификатов = Справочники.ВидыПодарочныхСертификатов.Выбрать();
	
	КонтрольУникальностиНомеров = Константы.КонтролироватьУникальностьНомеровПодарочныхСертификатовПоВсемВидам.Получить();
	
	Пока ВыборкаВидовПодарочныхСертификатов.Следующий() Цикл
		 ШаблонНомера = ВыборкаВидовПодарочныхСертификатов.ШаблонНомера;
		 
		 ОбработкаГенерацииПодарочныхСертификатов.ВидПодарочныхСертификатов = ВыборкаВидовПодарочныхСертификатов.Ссылка;
		 ОбработкаГенерацииПодарочныхСертификатов.ВариантГенерацииПодарочныхСертификатов = "с номерами в указанном диапазоне";
		 ОбработкаГенерацииПодарочныхСертификатов.ДиапазонНомераС = ОбработкаГенерацииПодарочныхСертификатов.ПолучитьНомерСертификатаСоответствующегоШаблону(1, ШаблонНомера); 
		 ОбработкаГенерацииПодарочныхСертификатов.ДиапазонНомераПо = ОбработкаГенерацииПодарочныхСертификатов.ПолучитьНомерСертификатаСоответствующегоШаблону(5, ШаблонНомера);
		 ОбработкаГенерацииПодарочныхСертификатов.ШаблонНомера = ШаблонНомера;
		 ОбработкаГенерацииПодарочныхСертификатов.Комментарий = СтрШаблон(НСтр("ru = 'Приказ № %1 от %2'"), ЮТТестовыеДанные.СлучайноеПоложительноеЧисло(999), Формат(НачалоНедели(ТекущаяДатаСеанса() - 10 * 86400), "ДФ=dd.MM.yyyy"));
		 ОбработкаГенерацииПодарочныхСертификатов.Ответственный = Пользователи.ТекущийПользователь();
		 ОбработкаГенерацииПодарочныхСертификатов.КонтрольУникальностиНомеров = КонтрольУникальностиНомеров;
		 ОбработкаГенерацииПодарочныхСертификатов.СгенерироватьПодарочныеСертификаты();
		 
		 ПодарочныеСертификатыПроверкаНаличия(ВыборкаВидовПодарочныхСертификатов.Ссылка);
	КонецЦикла;

КонецПроцедуры

Процедура ПодарочныеСертификатыПроверкаНаличия(ВидПодарочныхСертификатов) Экспорт
	
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Справочник.ПодарочныеСертификаты";
	ОписаниеЗапроса.Условия.Добавить("Владелец = &ВидПодарочныхСертификатов");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("ВидПодарочныхСертификатов", ВидПодарочныхСертификатов);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КОЛИЧЕСТВО(*) КАК КоличествоЭлементов");

	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса))
	    .ИмеетДлину(1)
	    .Свойство("[0].КоличествоЭлементов").Равно(5);
		
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "Документ.ВыпускПодарочныхСертификатов";
	ОписаниеЗапроса.Условия.Добавить("ВидПодарочныхСертификатов = &ВидПодарочныхСертификатов");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("ВидПодарочныхСертификатов", ВидПодарочныхСертификатов);
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КОЛИЧЕСТВО(*) КАК КоличествоЭлементов");

	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса))
	    .ИмеетДлину(1)
	    .Свойство("[0].КоличествоЭлементов").Равно(1);
		
	ОписаниеЗапроса = ЮТЗапросы.ОписаниеЗапроса();
	ОписаниеЗапроса.ИмяТаблицы = "РегистрСведений.ИсторияСтатусовПодарочныхСертификатов";
	ОписаниеЗапроса.Условия.Добавить("ПодарочныйСертификат.Владелец = &ВидПодарочныхСертификатов");
	ОписаниеЗапроса.Условия.Добавить("Статус = &Статус");
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("ВидПодарочныхСертификатов", ВидПодарочныхСертификатов);
	ОписаниеЗапроса.ЗначенияПараметров.Вставить("Статус", Перечисления.СтатусыПодарочныхСертификатов.Выпущен);
	
	ОписаниеЗапроса.ВыбираемыеПоля.Добавить("КОЛИЧЕСТВО(*) КАК КоличествоЭлементов");

	ЮТест.ОжидаетЧто(ЮТЗапросы.РезультатЗапроса(ОписаниеЗапроса))
	    .ИмеетДлину(1)
	    .Свойство("[0].КоличествоЭлементов").Равно(5);
			
КонецПроцедуры

#КонецОбласти

